<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://kestre.github.io/blog/"/>
  <updated>2019-01-16T03:12:40.110Z</updated>
  <id>https://kestre.github.io/blog/</id>
  
  <author>
    <name>kestre</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>政治第二章</title>
    <link href="https://kestre.github.io/blog/2019/01/16/19/01/%E6%94%BF%E6%B2%BB%E7%AC%AC%E4%BA%8C%E7%AB%A0.1/"/>
    <id>https://kestre.github.io/blog/2019/01/16/19/01/政治第二章.1/</id>
    <published>2019-01-15T16:00:00.000Z</published>
    <updated>2019-01-16T03:12:40.110Z</updated>
    
    <content type="html"><![CDATA[<h1 id="新民主主义革命理论"><a href="#新民主主义革命理论" class="headerlink" title="新民主主义革命理论"></a>新民主主义革命理论</h1><h3 id="近代中国国情、社会性质和主要矛盾"><a href="#近代中国国情、社会性质和主要矛盾" class="headerlink" title="近代中国国情、社会性质和主要矛盾"></a>近代中国国情、社会性质和主要矛盾</h3><ul><li>近代中国最基本的国情：半殖民地半封建社会</li><li>主要矛盾：帝国主义和中华民族的矛盾、封建主义和人民大众的矛盾，而帝国主义和中华民族的矛盾，又是各种矛盾中最主要的矛盾</li></ul><h3 id="近代中国革命的时代特征"><a href="#近代中国革命的时代特征" class="headerlink" title="近代中国革命的时代特征"></a>近代中国革命的时代特征</h3><ul><li>十月革命对中国资产阶级民主革命的影响</li><li>五四运动</li><li>中国新民主主义革命与其他民主革命的不同之处</li></ul><h3 id="新民主主义革命的实践基础"><a href="#新民主主义革命的实践基础" class="headerlink" title="新民主主义革命的实践基础"></a>新民主主义革命的实践基础</h3><ul><li>旧民主主义革命的失败呼唤新的革命理论</li><li>新民主主义革命的艰辛探索奠定了革命理论形成的实践基础</li></ul><h3 id="新民主主义革命的总路线"><a href="#新民主主义革命的总路线" class="headerlink" title="新民主主义革命的总路线"></a>新民主主义革命的总路线</h3><ul><li>无产阶级领导的，人民大众的，反对帝国主义、封建主义和官僚资本主义的革命</li></ul><h3 id="新民主主义革命的对象、任务、动力、性质、领导权和前途"><a href="#新民主主义革命的对象、任务、动力、性质、领导权和前途" class="headerlink" title="新民主主义革命的对象、任务、动力、性质、领导权和前途"></a>新民主主义革命的对象、任务、动力、性质、领导权和前途</h3><ul><li>对象：近代中国社会的性质和主要矛盾，决定了中国革命的主要敌人，就是帝国主义、封建主义和官僚资本主义</li><li>任务：对外推翻帝国主义压迫的民族革命和对内推翻封建地主压迫的民主革命</li><li>动力：工人阶级、农民阶级、城市小资产阶级和民族资产阶级</li><li>性质：资产阶级的民主主义革命</li><li>领导权：无产阶级及其政党——中古共产党。无产阶级的领导权是中国革命的中心问题，也是新民主主义革命理论的核心问题。无产阶级及其政党的领导，是中国革命取得胜利的根本保证</li><li>前途：社会主义</li></ul><h2 id="理解"><a href="#理解" class="headerlink" title="理解"></a>理解</h2><h3 id="新民主主义革命的领导权"><a href="#新民主主义革命的领导权" class="headerlink" title="新民主主义革命的领导权"></a>新民主主义革命的领导权</h3><h3 id="新民主主义基本纲领的主要内容"><a href="#新民主主义基本纲领的主要内容" class="headerlink" title="新民主主义基本纲领的主要内容"></a>新民主主义基本纲领的主要内容</h3><h3 id="新民主主义革命理论的意义"><a href="#新民主主义革命理论的意义" class="headerlink" title="新民主主义革命理论的意义"></a>新民主主义革命理论的意义</h3><h2 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h2><h3 id="中国革命走农村包围城市、武装夺取政权道路的内容和重大意义"><a href="#中国革命走农村包围城市、武装夺取政权道路的内容和重大意义" class="headerlink" title="中国革命走农村包围城市、武装夺取政权道路的内容和重大意义"></a>中国革命走农村包围城市、武装夺取政权道路的内容和重大意义</h3><h3 id="新民主主义革命的三大法宝及其相互关系"><a href="#新民主主义革命的三大法宝及其相互关系" class="headerlink" title="新民主主义革命的三大法宝及其相互关系"></a>新民主主义革命的三大法宝及其相互关系</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;新民主主义革命理论&quot;&gt;&lt;a href=&quot;#新民主主义革命理论&quot; class=&quot;headerlink&quot; title=&quot;新民主主义革命理论&quot;&gt;&lt;/a&gt;新民主主义革命理论&lt;/h1&gt;&lt;h3 id=&quot;近代中国国情、社会性质和主要矛盾&quot;&gt;&lt;a href=&quot;#近代中国国情、社会
      
    
    </summary>
    
    
      <category term="note" scheme="https://kestre.github.io/blog/tags/note/"/>
    
      <category term="专插本" scheme="https://kestre.github.io/blog/tags/%E4%B8%93%E6%8F%92%E6%9C%AC/"/>
    
      <category term="政治" scheme="https://kestre.github.io/blog/tags/%E6%94%BF%E6%B2%BB/"/>
    
  </entry>
  
  <entry>
    <title>程序设计基础第一章</title>
    <link href="https://kestre.github.io/blog/2019/01/15/19/01/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E5%9F%BA%E7%A1%80%E7%AC%AC%E4%B8%80%E7%AB%A0/"/>
    <id>https://kestre.github.io/blog/2019/01/15/19/01/程序设计基础第一章/</id>
    <published>2019-01-14T16:00:00.000Z</published>
    <updated>2019-01-14T08:33:59.705Z</updated>
    
    <content type="html"><![CDATA[<h1 id="习题一"><a href="#习题一" class="headerlink" title="习题一"></a>习题一</h1><h3 id="1-什么是计算机程序？"><a href="#1-什么是计算机程序？" class="headerlink" title="1.什么是计算机程序？"></a>1.什么是计算机程序？</h3><p>所谓计算机程序，就是能够被计算机识别和执行，从而实现特定功能的一组指令序列的集合。</p><h3 id="2-什么是计算机语言？-一般分为哪几类？"><a href="#2-什么是计算机语言？-一般分为哪几类？" class="headerlink" title="2.什么是计算机语言？ 一般分为哪几类？"></a>2.什么是计算机语言？ 一般分为哪几类？</h3><p>人与计算机之间要想进行沟通和交流，必须使用一种双方都能够理解和识别的语言，这就是计算机语言。总的来说，计算机语言可以分为<strong>低级语言</strong>和<strong>高级语言</strong>两大类。</p><h3 id="3-C语言程序设计的一般步骤有哪些？"><a href="#3-C语言程序设计的一般步骤有哪些？" class="headerlink" title="3.C语言程序设计的一般步骤有哪些？"></a>3.C语言程序设计的一般步骤有哪些？</h3><p>一、确定要解决的问题<br>二、分析问题<br>三、确定数据结构<br>四、设计算法并使用流程图或其他工具表示<br>五、编写程序<br>六、调试并测试程序<br>七、整理各类文档资料，交付使用</p><h3 id="4-C语言有哪些主要特点？"><a href="#4-C语言有哪些主要特点？" class="headerlink" title="4.C语言有哪些主要特点？"></a>4.C语言有哪些主要特点？</h3><p>一、简洁紧凑，灵活方便<br>二、运算符丰富<br>三、数据结构丰富<br>四、C语言是结构式语言<br>五、语法限制不太严格，程序设计自由度大<br>六、允许直接访问物理地址，对硬件进行操作<br>七、C语言生成代码质量高，执行效率高<br>八、适用范围大，可移植性好</p><h3 id="5-写出C语言的基本结构。"><a href="#5-写出C语言的基本结构。" class="headerlink" title="5.写出C语言的基本结构。"></a>5.写出C语言的基本结构。</h3><p>问题太智障，此处用一个HelloWorld表示<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;                 /*文件包含*/</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span>                           <span class="comment">/*主函数*/</span></span></span><br><span class="line"><span class="function"></span>&#123;                                           <span class="comment">/*函数体开头*/</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Hello world!"</span>);       <span class="comment">/*输出语句*/</span></span><br><span class="line">&#125;                                          <span class="comment">/*函数体结束*/</span></span><br></pre></td></tr></table></figure></p><h3 id="6-上机运行本章3个例题，熟悉C语言的运行步骤与方法。"><a href="#6-上机运行本章3个例题，熟悉C语言的运行步骤与方法。" class="headerlink" title="6.上机运行本章3个例题，熟悉C语言的运行步骤与方法。"></a>6.上机运行本章3个例题，熟悉C语言的运行步骤与方法。</h3><p>略。。。</p><h3 id="7-编写一个C程序并上机调试运行，起功能是输出以下信息："><a href="#7-编写一个C程序并上机调试运行，起功能是输出以下信息：" class="headerlink" title="7.编写一个C程序并上机调试运行，起功能是输出以下信息："></a>7.编写一个C程序并上机调试运行，起功能是输出以下信息：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">****************************</span><br><span class="line">This is a C program！</span><br><span class="line">****************************</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;  </span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span>      </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"****************************\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"This is a C program！\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"****************************"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="8-编写一个C程序并上机调试运行，其功能是从随意输入的两个数中找出较大的数并输出。"><a href="#8-编写一个C程序并上机调试运行，其功能是从随意输入的两个数中找出较大的数并输出。" class="headerlink" title="8.编写一个C程序并上机调试运行，其功能是从随意输入的两个数中找出较大的数并输出。"></a>8.编写一个C程序并上机调试运行，其功能是从随意输入的两个数中找出较大的数并输出。</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;  </span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span>      </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">    <span class="keyword">int</span> a,b;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请随意输入两个数："</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;a,&amp;b); </span><br><span class="line">    <span class="keyword">if</span>(a&gt;b)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d"</span>,a);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"较大的数为：%d"</span>,b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;习题一&quot;&gt;&lt;a href=&quot;#习题一&quot; class=&quot;headerlink&quot; title=&quot;习题一&quot;&gt;&lt;/a&gt;习题一&lt;/h1&gt;&lt;h3 id=&quot;1-什么是计算机程序？&quot;&gt;&lt;a href=&quot;#1-什么是计算机程序？&quot; class=&quot;headerlink&quot; title=
      
    
    </summary>
    
    
      <category term="note" scheme="https://kestre.github.io/blog/tags/note/"/>
    
      <category term="专插本" scheme="https://kestre.github.io/blog/tags/%E4%B8%93%E6%8F%92%E6%9C%AC/"/>
    
      <category term="程序设计基础" scheme="https://kestre.github.io/blog/tags/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>政治第一章</title>
    <link href="https://kestre.github.io/blog/2019/01/14/19/01/%E6%94%BF%E6%B2%BB%E7%AC%AC%E4%B8%80%E7%AB%A0/"/>
    <id>https://kestre.github.io/blog/2019/01/14/19/01/政治第一章/</id>
    <published>2019-01-13T16:00:00.000Z</published>
    <updated>2019-01-16T03:11:00.161Z</updated>
    
    <content type="html"><![CDATA[<h1 id="毛泽东思想及其历史地位"><a href="#毛泽东思想及其历史地位" class="headerlink" title="毛泽东思想及其历史地位"></a>毛泽东思想及其历史地位</h1><h2 id="识记"><a href="#识记" class="headerlink" title="识记"></a>识记</h2><h3 id="毛泽东思想的主要内容"><a href="#毛泽东思想的主要内容" class="headerlink" title="毛泽东思想的主要内容"></a>毛泽东思想的主要内容</h3><ul><li>一、新民主主义革命理论</li><li>二、社会主义革命和社会主义建设理论</li><li>三、革命军队建设和军事战略的理论</li><li>四、政策和策略的理论</li><li>五、思想政治工作和文化工作的理论</li><li>六、党的建设理论</li></ul><h3 id="毛泽东思想活的灵魂"><a href="#毛泽东思想活的灵魂" class="headerlink" title="毛泽东思想活的灵魂"></a>毛泽东思想活的灵魂</h3><ul><li>实事求是，群众路线，独立自主</li></ul><h3 id="毛泽东思想是马克思主义中国化的第一个重大理论成果"><a href="#毛泽东思想是马克思主义中国化的第一个重大理论成果" class="headerlink" title="毛泽东思想是马克思主义中国化的第一个重大理论成果"></a>毛泽东思想是马克思主义中国化的第一个重大理论成果</h3><h2 id="理解"><a href="#理解" class="headerlink" title="理解"></a>理解</h2><h3 id="毛泽东思想形成发展的历史条件"><a href="#毛泽东思想形成发展的历史条件" class="headerlink" title="毛泽东思想形成发展的历史条件"></a>毛泽东思想形成发展的历史条件</h3><ul><li>一、19世纪末20年代初，世界进入帝国主义和无产阶级革命时代。</li><li>二、1917年俄国十月革命的胜利开辟了世界无产阶级社会主义革命的新时代。它使中国反帝反封建的民主革命从旧的世界资产阶级民主革命的一部分 ，转变为新的世界无产阶级社会主义革命的一部分。十月革命给中国带来了马克思列宁主义，帮助中国的先进分子开始使用无产阶级的世界观作为观察国家命运的工具，中国革命从此有了科学的指导思想。</li><li>三、中国在革命取得胜利后，又经历了第二次世界大战后两大阵营的对立和斗争，西方国家不仅对我国实行持续的封锁禁运，还极力推行和平演变战略。</li><li>毛泽东思想正是在这样的时代条件下形成和发展起来的。</li></ul><h3 id="毛泽东思想形成发展的过程"><a href="#毛泽东思想形成发展的过程" class="headerlink" title="毛泽东思想形成发展的过程"></a>毛泽东思想形成发展的过程</h3><ul><li>毛泽东思想是中国共产党领导的中国革命与建设的实践中逐步形成和发展起来的。这一过程大体上可分为开始萌芽、初步形成、走向成熟和继续发展等多个阶段。</li><li>一、在中国共产党创立和国民革命时期，毛泽东等初步提出了新民主主义革命的基本思想，标志着毛泽东思想开始萌芽。</li><li>二、在土地革命战争前中期，毛泽东提出了农村包围城市、武装夺取政权的革命道路理论，提出了实事求是、群众路线、独立自主的基本思想，标志着毛泽东思想初步形成。</li><li>三、在土地革命战争后期和抗日战争时期，毛泽东写了大量著作，对新民主主义理论作了系统而完整的阐述，标志着毛泽东思想达到成熟。</li><li>四、在解放战争和从新民主主义向社会主义的过渡时期，毛泽东思想在军事原则、战略策略和政策、国家政权理论、革命转变理论等方面，均有新的重大发展。</li></ul><h3 id="毛泽东思想是中国革命和建设的科学指南"><a href="#毛泽东思想是中国革命和建设的科学指南" class="headerlink" title="毛泽东思想是中国革命和建设的科学指南"></a>毛泽东思想是中国革命和建设的科学指南</h3><ul><li>毛泽东思想是被实践证明了的关于中国革命和建设的正确的理论原则和经验总结。毛泽东对适合中国国情的社会主义道路进行了艰苦探索，并取得了重要的理论成果</li><li>毛泽东思想关于社会主义建设的基本思想观点，对于建设和发展中国特色社会主义仍然具有十分重要的指导意义</li></ul><h3 id="正确评价历史人物"><a href="#正确评价历史人物" class="headerlink" title="正确评价历史人物"></a>正确评价历史人物</h3><h2 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h2><h3 id="毛泽东思想是中国共产党和中国人民宝贵的精神财富"><a href="#毛泽东思想是中国共产党和中国人民宝贵的精神财富" class="headerlink" title="毛泽东思想是中国共产党和中国人民宝贵的精神财富"></a>毛泽东思想是中国共产党和中国人民宝贵的精神财富</h3><h3 id="坚持群众路线，就是坚持人民是推动历史发展的根本力量"><a href="#坚持群众路线，就是坚持人民是推动历史发展的根本力量" class="headerlink" title="坚持群众路线，就是坚持人民是推动历史发展的根本力量"></a>坚持群众路线，就是坚持人民是推动历史发展的根本力量</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;毛泽东思想及其历史地位&quot;&gt;&lt;a href=&quot;#毛泽东思想及其历史地位&quot; class=&quot;headerlink&quot; title=&quot;毛泽东思想及其历史地位&quot;&gt;&lt;/a&gt;毛泽东思想及其历史地位&lt;/h1&gt;&lt;h2 id=&quot;识记&quot;&gt;&lt;a href=&quot;#识记&quot; class=&quot;head
      
    
    </summary>
    
    
      <category term="note" scheme="https://kestre.github.io/blog/tags/note/"/>
    
      <category term="专插本" scheme="https://kestre.github.io/blog/tags/%E4%B8%93%E6%8F%92%E6%9C%AC/"/>
    
      <category term="政治" scheme="https://kestre.github.io/blog/tags/%E6%94%BF%E6%B2%BB/"/>
    
  </entry>
  
  <entry>
    <title>卡农</title>
    <link href="https://kestre.github.io/blog/2018/10/14/18/10/%E5%8D%A1%E5%86%9C/"/>
    <id>https://kestre.github.io/blog/2018/10/14/18/10/卡农/</id>
    <published>2018-10-13T16:00:00.000Z</published>
    <updated>2018-10-14T12:17:41.811Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/img/18/10/卡农/1.jpg" alt=""><br><img src="/img/18/10/卡农/2.jpg" alt=""></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="http://www.ukulelecn.com/forum.php?mod=viewthread&amp;tid=60057" target="_blank" rel="noopener">2016年1月指弹任务–《卡农》</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/img/18/10/卡农/1.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;/img/18/10/卡农/2.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;
      
    
    </summary>
    
    
      <category term="Ukelele" scheme="https://kestre.github.io/blog/tags/Ukelele/"/>
    
      <category term="music" scheme="https://kestre.github.io/blog/tags/music/"/>
    
  </entry>
  
  <entry>
    <title>NCRE三级（网络技术）</title>
    <link href="https://kestre.github.io/blog/2018/09/06/18/09/%E4%B8%89%E7%BA%A7%E7%BD%91%E7%BB%9C%E6%8A%80%E6%9C%AF/"/>
    <id>https://kestre.github.io/blog/2018/09/06/18/09/三级网络技术/</id>
    <published>2018-09-05T16:00:00.000Z</published>
    <updated>2018-10-14T12:20:30.854Z</updated>
    
    <content type="html"><![CDATA[<h1 id="错题笔记"><a href="#错题笔记" class="headerlink" title="错题笔记"></a>错题笔记</h1><h2 id="报考网址"><a href="#报考网址" class="headerlink" title="报考网址"></a>报考网址</h2><p><a href="http://202.116.236.74/NCRE_EMS/StudentLogin.aspx" target="_blank" rel="noopener">NCRE报名系统</a></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://pan.baidu.com/s/1eVmWvWNW4jznAgZafw6OSQ" target="_blank" rel="noopener">未来教育考试系统</a></p><h2 id="常错内容"><a href="#常错内容" class="headerlink" title="常错内容"></a>常错内容</h2><p>中继器工作在物理层<br>通过拨号远程配置Cisco路由器时，使用AUX端口连接一台Modem<br>RIP不支持可变长掩码，它只根据各类IP地址的网络号的位数来确定。因此，在配置网络地址时不需要给定掩码。RIP路由协议是在Router（config-router）#模式下进行配置。<br>蓝牙系统的异步信道速率：（1）非对称连接的异步信道速率是732.2Kbps/57.6Kbps。（2）对称连接的则为433.9Kbps（全双工模式）。<br>IEEE802.11b无线局域网的带宽最高可达11Mbps，802.11a的最大带宽是54mbps。<br>转发器也是一个DNS服务器，是本地DNS服务器用于将外部DNS名称的DNS查询转发给该DNS服务器<br>在配置DHCP服务时，保留地址可以使用作用域地址范围中的任何IP地址。<br>数据加密不属于网络安全评估内容<br>被动扫描工作方式类似于IDS<br>ip route&lt;目的网络地址&gt;&lt;子网掩码&gt;&lt;下一跳路由器的IP地址&gt;<br>户机的网络硬件地址长度，该地址指 6 bytes的Mac地址<br>入侵防护系统（IPS）<br>Smurf攻击基于网络的入侵防护系统可以阻断<br>Cisco PIX525防火墙用于实现内部和外部地址固定映射的配置命令是static<br>IEEE802.11b的最大容量是33Mbps<br> 配置BPDU数据包的长度小于等于35个字节<br> SNMP是一种较流行的用于传输管理信息的传输协议。并基于UDP传输。<br> HiperLAN技术与标准：HiperLAN/1采用5G射频频率，可以达到上行20Mbps的速率；HiperLAN/2也采用5G射频频率，上行速率达到54Mbps。<br> Switch-6500&gt;(enable)clear trunk 5/1 23<br> Switch-SW-6500&gt;(enable)set spantree portfast 4/1-24 enable<br>ISO/IEC 18011不是综合布线系统标准<br>ADSL技术提供了非对称特性<br> 保证QoS的主要技术有RSVP、DiffServ和  MPLS</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;错题笔记&quot;&gt;&lt;a href=&quot;#错题笔记&quot; class=&quot;headerlink&quot; title=&quot;错题笔记&quot;&gt;&lt;/a&gt;错题笔记&lt;/h1&gt;&lt;h2 id=&quot;报考网址&quot;&gt;&lt;a href=&quot;#报考网址&quot; class=&quot;headerlink&quot; title=&quot;报考网址&quot;&gt;&lt;/a
      
    
    </summary>
    
    
      <category term="note" scheme="https://kestre.github.io/blog/tags/note/"/>
    
  </entry>
  
  <entry>
    <title>Ngau Hung</title>
    <link href="https://kestre.github.io/blog/2018/09/01/18/09/Ngau%20Hung/"/>
    <id>https://kestre.github.io/blog/2018/09/01/18/09/Ngau Hung/</id>
    <published>2018-08-31T16:00:00.000Z</published>
    <updated>2018-09-01T05:57:53.231Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/img/18/09/Ngau Hung/1.jpg" alt=""></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="http://www.ukulelecn.com/thread-144306-1-1.html" target="_blank" rel="noopener">抖音神曲 |《Ngau Hung》PDD洪荒之力 指弹教学</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/img/18/09/Ngau Hung/1.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;ht
      
    
    </summary>
    
    
      <category term="Ukelele" scheme="https://kestre.github.io/blog/tags/Ukelele/"/>
    
      <category term="music" scheme="https://kestre.github.io/blog/tags/music/"/>
    
  </entry>
  
  <entry>
    <title>I&#39;m yours</title>
    <link href="https://kestre.github.io/blog/2018/08/30/18/08/I&#39;m%20yours/"/>
    <id>https://kestre.github.io/blog/2018/08/30/18/08/I&#39;m yours/</id>
    <published>2018-08-29T16:00:00.000Z</published>
    <updated>2018-08-30T00:27:18.894Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/img/18/08/I&#39;m yours/1.jpg" alt=""><br><img src="/img/18/08/I&#39;m yours/2.jpg" alt=""><br><img src="/img/18/08/I&#39;m yours/3.jpg" alt=""><br><img src="/img/18/08/I&#39;m yours/4.jpg" alt=""></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="http://www.tanukulele.com/7342.html" target="_blank" rel="noopener">《I’m yours》郑成河ukulele版演示 by桃子</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/img/18/08/I&amp;#39;m yours/1.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;/img/18/08/I&amp;#39;m yours/2.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;/img/18/08/I&amp;#39;m yo
      
    
    </summary>
    
    
      <category term="Ukelele" scheme="https://kestre.github.io/blog/tags/Ukelele/"/>
    
      <category term="music" scheme="https://kestre.github.io/blog/tags/music/"/>
    
  </entry>
  
  <entry>
    <title>虫儿飞</title>
    <link href="https://kestre.github.io/blog/2018/08/29/18/08/%E8%99%AB%E5%84%BF%E9%A3%9E/"/>
    <id>https://kestre.github.io/blog/2018/08/29/18/08/虫儿飞/</id>
    <published>2018-08-28T16:00:00.000Z</published>
    <updated>2018-08-29T12:07:24.432Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/img/18/08/虫儿飞/1.jpg" alt=""></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="http://www.ukulelecn.com/forum.php?mod=viewthread&amp;tid=146824&amp;highlight=%B3%E6%B6%F9%B7%C9" target="_blank" rel="noopener">《虫儿飞》尤克里里指弹&amp;弹唱曲谱 郑伊健 白熊版</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/img/18/08/虫儿飞/1.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://w
      
    
    </summary>
    
    
      <category term="Ukelele" scheme="https://kestre.github.io/blog/tags/Ukelele/"/>
    
      <category term="music" scheme="https://kestre.github.io/blog/tags/music/"/>
    
  </entry>
  
  <entry>
    <title>黄油曲奇</title>
    <link href="https://kestre.github.io/blog/2018/08/23/18/08/%E9%BB%84%E6%B2%B9%E6%9B%B2%E5%A5%87/"/>
    <id>https://kestre.github.io/blog/2018/08/23/18/08/黄油曲奇/</id>
    <published>2018-08-22T16:00:00.000Z</published>
    <updated>2018-09-30T13:39:41.786Z</updated>
    
    <content type="html"><![CDATA[<h1 id="原味黄油曲奇"><a href="#原味黄油曲奇" class="headerlink" title="原味黄油曲奇"></a>原味黄油曲奇</h1><table><thead><tr><th style="text-align:left">材料</th><th style="text-align:left">原味</th><th style="text-align:left">抹茶味</th><th style="text-align:left">可可味</th></tr></thead><tbody><tr><td style="text-align:left">黄油</td><td style="text-align:left">130g</td><td style="text-align:left">130g</td><td style="text-align:left">130g</td></tr><tr><td style="text-align:left">糖粉</td><td style="text-align:left">50g（可适量减少）</td><td style="text-align:left">50g</td><td style="text-align:left">50g</td></tr><tr><td style="text-align:left">盐</td><td style="text-align:left">1.5g</td><td style="text-align:left">1.5g</td><td style="text-align:left">1.5g</td></tr><tr><td style="text-align:left">蛋清</td><td style="text-align:left">30g</td><td style="text-align:left">30g</td><td style="text-align:left">30g</td></tr><tr><td style="text-align:left">低筋面粉</td><td style="text-align:left">90g</td><td style="text-align:left">85g</td><td style="text-align:left">80g</td></tr><tr><td style="text-align:left">高筋面粉</td><td style="text-align:left">70g</td><td style="text-align:left">70g</td><td style="text-align:left">70g</td></tr><tr><td style="text-align:left">杏仁粉</td><td style="text-align:left">25g</td><td style="text-align:left">25g</td><td style="text-align:left">25g</td></tr><tr><td style="text-align:left">抹茶/可可粉</td><td style="text-align:left"></td><td style="text-align:left">10g</td><td style="text-align:left">15g</td></tr></tbody></table><h1 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h1><h2 id="用料"><a href="#用料" class="headerlink" title="用料"></a>用料</h2><ul><li>黄油需要提前拿出来软化，一小时左右（因室温而不同），冬天可以用吹风筒加快软化。软化程度：太软花纹不成型，太硬挤到手抽筋。</li><li>加了高粉和蛋清（可以让曲奇口感偏脆，也有助于保持花纹立体）。可以把蛋白换成蛋黄液或者全蛋液，高筋面粉全部换成低筋面粉，但成品的纹路可能也就没有原配方的纹路立体，也会比较容易碎。</li><li>糖粉可以根据自己口味适当增减，用白砂糖也行</li><li>没有杏仁粉的，也可以不放，其他材料用量不变，基本没影响，只是口感和香味会差一点点。</li></ul><h2 id="烘烤"><a href="#烘烤" class="headerlink" title="烘烤"></a>烘烤</h2><ul><li>烤饼干类的其实不设置固定时间，一般都是随时观察烤箱，观察饼干的上色程度，烤熟了的就先拿出来，没熟的继续烤，所以，千万不要设置好了时间就不管了，一定要随时观察饼干的状态；</li><li>烤抹茶味曲奇：烤 5 ~ 10 分钟定型后（曲奇表面油光消失后），请盖上锡纸继续烤20min以上，不然曲奇表面很容易上色，要随时观察曲奇的状态，摸着底部有一点点硬，记住，一点点硬就可以拿出来了，使劲按的话，可能还会有点软，没关系，冷却后就硬</li></ul><h2 id="出炉"><a href="#出炉" class="headerlink" title="出炉"></a>出炉</h2><ul><li>曲奇烤完后冷却后最好密封，不然会回潮的</li><li>关于保质期，密封，春天秋天冬天常温25天左右，夏天15天左右，仅供参考，具体时间，根据保存的环境会有所不同</li></ul><h1 id="烤箱"><a href="#烤箱" class="headerlink" title="烤箱"></a>烤箱</h1><table><thead><tr><th style="text-align:left"></th><th style="text-align:left">上管</th><th style="text-align:left">下管</th><th style="text-align:left">Time</th></tr></thead><tbody><tr><td style="text-align:left">预热</td><td style="text-align:left">180度</td><td style="text-align:left">180度</td><td style="text-align:left">10min</td></tr><tr><td style="text-align:left">烘烤</td><td style="text-align:left">160度</td><td style="text-align:left">160度</td><td style="text-align:left">20min以上</td></tr></tbody></table><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="http://www.xiachufang.com/recipe/102752278/" target="_blank" rel="noopener">零失败花纹超级立体的黄油曲奇</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;原味黄油曲奇&quot;&gt;&lt;a href=&quot;#原味黄油曲奇&quot; class=&quot;headerlink&quot; title=&quot;原味黄油曲奇&quot;&gt;&lt;/a&gt;原味黄油曲奇&lt;/h1&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:left&quot;&gt;材料&lt;/th&gt;

      
    
    </summary>
    
    
      <category term="烘培" scheme="https://kestre.github.io/blog/tags/%E7%83%98%E5%9F%B9/"/>
    
  </entry>
  
  <entry>
    <title>蛋挞</title>
    <link href="https://kestre.github.io/blog/2018/07/24/18/07/%E8%9B%8B%E6%8C%9E/"/>
    <id>https://kestre.github.io/blog/2018/07/24/18/07/蛋挞/</id>
    <published>2018-07-23T16:00:00.000Z</published>
    <updated>2018-10-14T12:13:27.646Z</updated>
    
    <content type="html"><![CDATA[<h2 id="配方一"><a href="#配方一" class="headerlink" title="配方一"></a>配方一</h2><table><thead><tr><th style="text-align:left">材料</th></tr></thead><tbody><tr><td style="text-align:left">鸡蛋</td><td style="text-align:left">2个</td></tr><tr><td style="text-align:left">牛奶</td><td style="text-align:left">110g</td></tr><tr><td style="text-align:left">细砂糖</td><td style="text-align:left">40g</td></tr><tr><td style="text-align:left">淡奶油</td><td style="text-align:left">180g</td></tr><tr><td style="text-align:left">速冻挞皮</td><td style="text-align:left">15个</td></tr><tr><td style="text-align:left">位置</td><td style="text-align:left">中层或中下层</td></tr><tr><td style="text-align:left">火候（预热10分钟）</td><td style="text-align:left">上下：200度</td></tr><tr><td style="text-align:left">时间</td><td style="text-align:left">25分钟</td></tr></tbody></table><h2 id="配方二"><a href="#配方二" class="headerlink" title="配方二"></a>配方二</h2><table><thead><tr><th style="text-align:left">材料</th></tr></thead><tbody><tr><td style="text-align:left">鸡蛋</td><td style="text-align:left">2个</td></tr><tr><td style="text-align:left">牛奶</td><td style="text-align:left">100g</td></tr><tr><td style="text-align:left">细砂糖</td><td style="text-align:left">25g</td></tr><tr><td style="text-align:left">淡奶油（或牛奶）</td><td style="text-align:left">60g</td></tr><tr><td style="text-align:left">速冻挞皮</td><td style="text-align:left">10个</td></tr><tr><td style="text-align:left">位置</td><td style="text-align:left">中层</td></tr><tr><td style="text-align:left">火候（预热10分钟）</td><td style="text-align:left">上下：200度</td></tr><tr><td style="text-align:left">时间</td><td style="text-align:left">20分钟</td></tr></tbody></table><h2 id="制作"><a href="#制作" class="headerlink" title="制作"></a>制作</h2><ul><li>速冻挞皮解冻，其他材料准备好</li><li>将鸡蛋，牛奶，细砂糖和淡奶油混合，搅拌均匀制成蛋挞液</li><li>将蛋挞液倒入蛋挞皮，放入预热好的烤箱</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;配方一&quot;&gt;&lt;a href=&quot;#配方一&quot; class=&quot;headerlink&quot; title=&quot;配方一&quot;&gt;&lt;/a&gt;配方一&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:left&quot;&gt;材料&lt;/th&gt;
&lt;/tr&gt;
&lt;/thea
      
    
    </summary>
    
    
      <category term="烘培" scheme="https://kestre.github.io/blog/tags/%E7%83%98%E5%9F%B9/"/>
    
  </entry>
  
  <entry>
    <title>戚风蛋糕</title>
    <link href="https://kestre.github.io/blog/2018/07/23/18/07/%E6%88%9A%E9%A3%8E%E8%9B%8B%E7%B3%95/"/>
    <id>https://kestre.github.io/blog/2018/07/23/18/07/戚风蛋糕/</id>
    <published>2018-07-22T16:00:00.000Z</published>
    <updated>2018-09-30T13:39:53.405Z</updated>
    
    <content type="html"><![CDATA[<h1 id="戚风蛋糕（或可可味）"><a href="#戚风蛋糕（或可可味）" class="headerlink" title="戚风蛋糕（或可可味）"></a>戚风蛋糕（或可可味）</h1><table><thead><tr><th style="text-align:left">材料</th><th style="text-align:left">6寸</th><th style="text-align:left">8寸</th></tr></thead><tbody><tr><td style="text-align:left">鸡蛋</td><td style="text-align:left">3颗（约56g/颗）</td><td style="text-align:left">5颗（60g/颗以上为佳）</td></tr><tr><td style="text-align:left">牛奶</td><td style="text-align:left">30g</td><td style="text-align:left">40g</td></tr><tr><td style="text-align:left">色拉油</td><td style="text-align:left">30g</td><td style="text-align:left">40g</td></tr><tr><td style="text-align:left">低筋面粉</td><td style="text-align:left">55g</td><td style="text-align:left">85g</td></tr><tr><td style="text-align:left">细砂糖（蛋黄糊）</td><td style="text-align:left">5g</td><td style="text-align:left">15g</td></tr><tr><td style="text-align:left">细砂糖（蛋白霜）</td><td style="text-align:left">35g</td><td style="text-align:left">60g</td></tr><tr><td style="text-align:left">柠檬汁或白醋（可以不加）</td><td style="text-align:left">1~2滴</td><td style="text-align:left">3~5滴</td></tr><tr><td style="text-align:left">如要添加可可粉</td><td style="text-align:left">减少低筋面粉</td><td style="text-align:left">5g</td></tr><tr><td style="text-align:left">可可粉</td><td style="text-align:left">12g</td><td style="text-align:left">20g</td></tr></tbody></table><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><p>工具要无水无油<br>蛋清中不可有蛋黄（不易打发）</p><h3 id="蛋黄糊"><a href="#蛋黄糊" class="headerlink" title="蛋黄糊"></a>蛋黄糊</h3><p>蛋黄依次加入糖，色拉油，牛奶，可可粉搅拌均匀，姿势无要求<br>分几次筛入低筋面粉，用Z字形搅拌均匀</p><h3 id="蛋白霜"><a href="#蛋白霜" class="headerlink" title="蛋白霜"></a>蛋白霜</h3><p>蛋白霜加柠檬汁打发<br>分三次加入细砂糖<br>不可打发过度</p><h3 id="蛋糕糊"><a href="#蛋糕糊" class="headerlink" title="蛋糕糊"></a>蛋糕糊</h3><p>蛋白霜分3次加入蛋黄糊<br>用炒菜姿势搅拌均匀，不可画圈搅拌</p><h3 id="烘烤"><a href="#烘烤" class="headerlink" title="烘烤"></a>烘烤</h3><p>烤箱200度预热10分钟<br>放入中下层，上火170，下火160，50分钟</p><h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><p>取出时要倒置（以免收腰）<br>冷却后可脱模</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;戚风蛋糕（或可可味）&quot;&gt;&lt;a href=&quot;#戚风蛋糕（或可可味）&quot; class=&quot;headerlink&quot; title=&quot;戚风蛋糕（或可可味）&quot;&gt;&lt;/a&gt;戚风蛋糕（或可可味）&lt;/h1&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-alig
      
    
    </summary>
    
    
      <category term="烘培" scheme="https://kestre.github.io/blog/tags/%E7%83%98%E5%9F%B9/"/>
    
  </entry>
  
  <entry>
    <title>哆啦A梦</title>
    <link href="https://kestre.github.io/blog/2018/07/22/18/07/%E5%93%86%E5%95%A6A%E6%A2%A6/"/>
    <id>https://kestre.github.io/blog/2018/07/22/18/07/哆啦A梦/</id>
    <published>2018-07-21T16:00:00.000Z</published>
    <updated>2018-08-29T12:08:26.103Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/img/18/07/哆啦A梦/1.jpg" alt=""><br><img src="/img/18/07/哆啦A梦/2.jpg" alt=""><br><img src="/img/18/07/哆啦A梦/3.jpg" alt=""></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="http://www.ukulelecn.com/forum.php?mod=viewthread&amp;tid=97291&amp;highlight=%B6%DF%C0%B2" target="_blank" rel="noopener">名渡山遼尤克里里演奏哆啦A梦之歌</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/img/18/07/哆啦A梦/1.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;/img/18/07/哆啦A梦/2.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;/img/18/07/哆啦A梦/3.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1 
      
    
    </summary>
    
    
      <category term="Ukelele" scheme="https://kestre.github.io/blog/tags/Ukelele/"/>
    
      <category term="music" scheme="https://kestre.github.io/blog/tags/music/"/>
    
  </entry>
  
  <entry>
    <title>狼人杀规则</title>
    <link href="https://kestre.github.io/blog/2018/07/04/18/07/%E7%8B%BC%E4%BA%BA%E6%9D%80/"/>
    <id>https://kestre.github.io/blog/2018/07/04/18/07/狼人杀/</id>
    <published>2018-07-03T16:00:00.000Z</published>
    <updated>2018-07-24T12:06:34.657Z</updated>
    
    <content type="html"><![CDATA[<p>1、警长规则<br>（1）第一天未宣布死者之前就进行警长竞选。<br>（2）警长竞选后可以退选。<br>（3）只有未竞选者可以投票，竞选后退选不能投票。<br>（4）如果第一次投票时平票，则平票者再进行一次发言，然后其他人视为退选。依然只有未竞选者能投票。如果再次平票则没有警长。<br>（5）狼人可以在警长竞选阶段自爆，如果这样则没有警长。</p><p>2、发言规则<br>（1）游戏开始前，事先规定警长竞选发言从号码最大或最小的开始。<br>（2）第一天白天发言从警长左边（或右边）开始，警长最后发言。第二天换手，以此类推。如果上一天是警长的左手边先开始发言，则接下来的一天就换成警长的右手边先开始发言。<br>（3）如果没有警长，则从最后一个死者的左边（或右边）开始发言。<br>（4）狼人可以在任何人发言时自爆。自爆后所有发言立即中止。</p><p>3、遗言规则(关于遗言各地面杀的规则不一)<br>（1）第一天晚上的死者有遗言（无论死了几个）、第二晚只有单个玩家死亡有遗言，出现多死的情况则没有遗言（进阶规则：第二晚开始所有夜里死的玩家均没有遗言，包括第二晚）。所有白天死亡的玩家都有遗言。<br>（2）第三天及以后晚上的死者均没有遗言（若在第（1）条遗言规则中采取了进阶规则，则忽略此条）。<br>（3）情侣殉情视为同时死亡。<br>（4）猎人枪杀目标视为与猎人同一时间死亡（即猎人白天死，则枪杀目标视为白天死；猎人夜晚死，则枪杀目标视为夜晚死）。<br>（5）女巫毒杀目标视为夜晚死亡。<br>（6）狼人自爆可以留遗言（又称为指刀）。<br>（7）狼人在第一天警长竞选时自爆，第一天夜晚的死者依然可以发表遗言。<br>注：另有一份遗言规则是：有几狼就有几遗言，用完为止。比如12人标准屠边局，配置有4狼，则遗言数为4个，无论白天死还是夜里死，无论被女巫毒还是猎人带，无论狼自曝或情侣殉情，都占遗言数。</p><p>4、投票规则<br>（1）投票时所有人根据法官指令同时举票，允许弃票，跟票无效。<br>（2）警长的票视为2票(面杀的规则里警长就是2票，1.5票最早是网杀的规则，近来熊猫tv播出的pandakill也沿用了网杀的1.5票规则)。<br>（3）当在白天放逐投票环节发生平票时，所有平票者进入PK台，再进行一轮发言，然后平票者不能投票（包括平票的人为警长亦不能投票），其余玩家只能投票给PK台上的嫌疑人。若再次平票则无人被处决，即平安日，将直接进入黑夜。<br>（4）被连中情侣的两位玩家，在白天放逐投票环节永远不能互投。例如4号、9号两名玩家被连中情侣，在白天4号玩家被怀疑，且警长也归票了4号，即便大势所趋，9号玩家因为是4号玩家的情侣是不能上票给4号的，9号玩家只能投其他玩家或是弃票。</p><p>5、警徽规则<br>（1）狼人在警长竞选时自爆，则警徽流失。<br>（2）警长因任何原因死亡时，可以移交警徽，获得警徽的玩家成为现任警长。<br>（3）警长因任何原因死亡时，可以撕毁警徽，警徽撕毁后，本局将没有警长。</p><p>6、规则盲点<br>（1）当某个玩家被狼人袭击时，若守卫的守护与女巫的解药同时对其使用，将会导致拯救失败，该名玩家死亡（同守同救失效）。守卫可以自守，但不能连续两晚守同一个目标。<br>（2）白痴在白天被高票处决翻牌发动技能免除放逐后，在接下来的游戏中他就没有投票权了，但白痴依然可以按照正常轮次发言，不能插嘴。即白痴翻牌后就成为了场上存活的不能投票的好人，要让其出局狼人必须在夜里刀走白痴（当然女巫的毒药、猎人的枪都是可以带走他的）。白痴若是因为情侣死亡他殉情的则不能发动技能，与情侣一同出局。<br>（3）女巫在解药已经用掉后，便不能再知道夜晚被狼人袭击的对象是谁。如无特殊说明，女巫不能自救。<br>（4）猎人若在夜晚被女巫毒杀或情侣死亡殉情时，将会得到法官的提示，表明其技能不能发动。如果白天醒来是没有遗言的天数，他将直接被宣布离场，不能留下任何信息。<br>（5）预言家只能验证某位玩家是否是狼人，除了是否狼人以外的一切信息均不能验证（情侣、内奸、非狼坏身份等等），如果预言家验中丘比特，法官无需计较丘比特是哪方阵营，永远只出示好人手势。<br>（6）狼刀在先原则：狼人杀害玩家，且女巫不使用解药，若此时已达成狼人胜利条件，则直接判定狼人胜利。即使女巫之后毒杀或猎人开枪带走最后一个狼人也无效。<br>（7）狼人刀法：允许空刀、允许自刀，无法统一意见则视为空刀。</p><p>【法官必须要知道的】<br>法官主持发言流程与套路：<br>天黑请闭眼，请大家确认好自己的身份后低头闭眼靠后坐…<br>盗贼请睁眼，盗贼请选牌…盗贼请闭眼…<br>丘比特请睁眼，丘比特请向法官出示两个数字，这两个数字玩家将成为本局的情侣…丘比特请闭眼…<br>请大家依然保持闭眼，并将自己的右手伸向前方，手掌心向上，法官会轻轻触碰被连的两名玩家的手掌心…被点中的两名玩家将成为本局游戏的情侣…好了，请将你们的手伸回…<br>情侣请睁眼，情侣请互相认识…情侣请闭眼…<br>守卫请睁眼，守卫请选择一名你要守护的玩家数字…守卫请闭眼…<br>长老请睁眼，长老请看向法官…长老请闭眼…<br>狼人请睁眼，狼人请互相认识，狼人请统一意见出示一名今晚要击杀的玩家数字…狼人请闭眼…<br>女巫请睁眼，女巫，今夜死亡的是这个玩家数字(出示数字手势但不说话)，如果你要使用解药请出示大拇指，如果你要使用毒药请直接出示你要毒的数字手势…女巫请闭眼。<br>预言家请睁眼，预言家请验人…大拇指向上表示好人，大拇指向下表示狼人，你要验的是(出示验人手势但不说话)…预言家请闭眼…<br>猎人请睁眼，猎人，大拇指向上表示你的技能出局后可以正常发动，大拇指向下表示你的技能失效，你的技能是(出示手势但不说话)…猎人请闭眼…<br>白痴请睁眼，白痴请看向法官…白痴请闭眼…<br>天亮了，现在开始警长竞选，竞选开始！<br>……<br>警长竞选投票环节主持发言：<br>好，警上发言结束，仍然坚持竞选的玩家请将自己的数字放在胸前，警上退水的玩家无投票权，其余未参与竞选的玩家在我倒数三秒后统一举票至头顶，允许弃票，跟票无效！三，二，一…<br>……<br>放逐投票环节主持发言：<br>好，所有玩家发言结束，现在进行放逐投票，我倒数三秒后所有玩家统一举票，允许弃票，跟票无效！三，二，一…<br>……<br>PK台投票环节主持发言：<br>x号玩家和y号玩家此轮平票，进入PK台，现在进行PK发言，x号玩家请发言…y号玩家请发言…好，PK发言结束，现在开始投票，请PK台下的玩家在我倒数三秒后统一举票，允许弃票，跟票无效！三，二，一…<br>……<br>注：请法官严格遵守上述主持的规范用语，不得给场外，必要环节不得跳过！<br>——————————<br>法官黑夜主持睁眼的顺序依次为：盗贼——丘比特——情侣——守卫——长老——狼人——女巫——预言家——猎人——白痴……（此顺序为第一夜，第二夜开始直接从守卫开始）<br>若游戏身份配置中没有加入某个身份则按照上述顺序直接跳过就行。长老和守卫两张神牌一般不建议同时存在。<br>注意：<br>（1）给盗贼选牌时不能留下场外信息，若盗贼在底牌中或是盗贼埋了丘比特及任一神牌，法官的发言顺序还是要遵守上述的身份顺序的，不能跳过不能省略。<br>（2）丘比特在选定情侣、经法官确认后，法官便要指示丘比特闭眼（当然丘比特本人也可以成为情侣的一方）。情侣睁眼后不可以亮牌给对方看，但可以通过手势、暗语等信息传递身份信息，情侣只有在第一晚有睁眼的环节。<br>（3）守卫若连续两晚守了同一目标会得到法官的提醒，必须要求其改守。<br>（4）狼人出刀允许通过手势、眼神、暗语讨论，但最终必须要统一亮出要击杀的玩家数字，否则视为意见不统一，空刀处理。<br>（5）女巫在解药未用之前的夜晚，法官会向其出示当晚被狼人击杀的数字，如果女巫要用解药直接点头或给个大拇指，如果女巫要用毒药则直接向法官出示要毒的数字。不采取任何行动则直接摇头示意法官后闭眼。女巫一个晚上只能用一瓶药，整局游戏只有两瓶药。<br>（6）法官给预言家的验人信息只有好人和坏人（狼人）两种手势，预言家验不出人狼第三方、三方丘比特、神牌等具体信息。<br>（7）猎人每晚睁眼，如果存活或是被狼人刀死会得到法官肯定的指示，表明其技能可以发动。如果猎人被女巫毒死或是他是情侣中殉情的一方则会得到法官否定的指示，表明其技能不能发动。例如4号玩家和9号玩家被连为情侣，9号玩家是猎人，4号玩家当晚被刀，9号玩家则殉情，白天法官公布死者后9号猎人将不能发动技能，没有遗言的天数更是不能留下任何信息。同样的，如果4号玩家白天被归票出局，那么法官会同时宣布9号玩家殉情出局，此时9号猎人也是不能开枪的，但因为是死在白天，情侣双方都有遗言。上述两种情况反一下，夜里被刀的是9号猎人或白天被票出去的是9号猎人，那么殉情方就是4号玩家了，此时9号猎人是可以开枪的。<br>（8）如果情侣倒在夜里，法官白天则直接公布几位玩家死亡就行。如果情侣一方在白天被票死，法官在宣布该玩家出局后要立即宣布情侣中的另一方“殉情”。两者都有遗言。<br>（9）猎人在翻牌开枪带人自证后，法官在黑夜则可以省略猎人睁眼的环节。如果有玩家出局遗言说自己是猎人走的，最终选择不开枪，那么法官黑夜主持还是要报猎人的环节，不能省略。<br>（10）若场上狼人和第三方人狼情侣已全部出局，丘比特存活，此时游戏仍视为第三方阵营存在，游戏继续，因为丘比特夜里不能刀人，在接下来的游戏进程中会一直出现平安夜，好人需找出丘比特将其弄出局好人阵营方能胜利。<br>（11）长老因意外死亡（女巫毒、猎人枪、白天票）导致好身份牌失去技能后的夜里，法官的发言顺序和套路是不变的。即还是要按流程走一遍，只不过要向神牌表明不能用技能了。例如在长老死后，法官在夜里还是要这么发言“预言家请睁眼，请验人，这个是好人，这个是坏人，你要验的是这个。”但实际已不再给出验人手势了。女巫、猎人同理（女巫如果在长老死之前解药没用的，法官还是要向女巫指示刀法，只不过女巫如果选择用药法官只会摇头示意其不能用技能了）。 </p><p>【狼人杀身份介绍】<br>村民：夜里全程闭眼，白天根据场上玩家的发言、投票行为等找出狼人，呼吁好人将其归出。</p><p>狼人：每晚睁眼与狼队友统一意见后击杀一位玩家，白天则混在好人中，在避免自己被怀疑的同时又要引导好人将其他好身份投票出局。</p><p>预言家：一张神牌，每晚睁眼验一位玩家的身份，会得到法官给出的是好人还是坏人（狼人）的手势提示。</p><p>女巫：一张神牌，拥有两瓶药，一瓶是解药，一瓶是毒药。女巫每晚睁眼选择是否用药，解药可以救起当晚被狼人击杀的玩家，毒药可以毒走一位玩家。女巫在一个晚上只能用一瓶药，且整局游戏只有两瓶药。如无特殊说明，女巫不能自救。</p><p>猎人：一张神牌，在被狼人刀死或被投票出局时可以翻牌发动技能开枪带走一位玩家与他同时出局。当猎人被毒死或殉情时将不能发动技能。</p><p>守卫：一张神牌，每晚睁眼选择守护一位玩家，若该名玩家被狼人刀中则狼刀无效，该名玩家依旧存活。守卫可以自守，但不能连续两晚守同一个目标。守卫的守护和女巫的解药在一个晚上同时用在了同一个目标身上，守护和解药失效，该名玩家依旧死亡。守卫的守护也守不了女巫的毒药，即守护只能挡狼刀。守卫牌一般不建议与长老牌同时存在。</p><p>长老：一张神牌，拥有两条命，狼人需刀长老两刀才能将其刀死。若狼人刀中长老第一条命，女巫当晚将得不到法官的刀法指示；若狼人刀中长老第二条命，女巫会得到法官的刀法指示，若女巫对其用解药救起，则救起的长老只有一条命。长老若被女巫毒死、白天票死、猎人带走则一击毙命。做为惩罚，在接下来的游戏中所有拥有技能的好身份牌技能全部失效（预言家不能验人、女巫不能用药、猎人开不了枪、白痴不能免除放逐/白痴已翻牌的要判离场，等等），长老被狼人杀死或因为情侣死亡长老殉情的不会失去技能。长老牌一般不建议与守卫牌同时存在。</p><p>白痴：一张神牌(或民牌，依照相应屠边局规则改变)，白痴若在白天放逐投票环节被投票出局可以翻牌发动技能免除放逐，仍视为存活。在接下来的游戏中白痴按照正常轮次发言，但不再拥有投票权。狼人要将翻牌后的白痴弄出局必须要在夜里将其刀死。</p><p>丘比特：在游戏开始的第一晚指定两名玩家成为情侣，丘比特也可以将自己与另一名玩家连成情侣。在这之后，情侣睁眼互相认识，确认身份。在接下来的游戏中，两名情侣中的一个死去时，另一名也立即殉情死去。在白天放逐投票环节，一名情侣永远不能投票给另一名情侣。如果被连中的两名情侣，一个是狼人，另一个是好人，此时场上这对情侣与丘比特形成人狼第三方阵营，第三方阵营的胜利条件是将其余所有玩家都杀死（包括狼人和好人）。丘比特的胜利条件：如果听出两名被连中的玩家是好人，则帮好人阵营玩；听出连中人狼了，则与人狼情侣形成第三方阵营；听出连中两狼，通常情况下帮狼人阵营玩（根据人数身份配置规则做相应调整）。在屠边规则中，丘比特既不是神牌也不是民牌。</p><p>盗贼：如果使用盗贼，在游戏开始的时候加入两张额外的普通村民牌，法官洗混身份牌并依次发牌后，留下多余的两张牌做为底牌。抽中盗贼牌的玩家在第一晚第一个睁眼，法官会向其出示两张底牌的身份信息，盗贼必须在这两张牌中选择一个身份，在接下来的游戏中盗贼即成为该身份进行整局游戏，并适用该身份的胜利条件。偶尔可能出现没有盗贼的局，即盗贼牌本身就在两张底牌中（但此时底牌不能为一盗贼一狼，法官要调控）。在供盗贼选择的两张底牌中也不可能出现两狼（法官调控）。若两张底牌中有一张狼人牌，盗贼必须选择狼人，另一身份牌将被埋掉，即本局游戏中不会有另一身份牌。</p><p>警长：警长不是一张身份牌，而是一张标志牌，可以跟身份牌一起使用。在第一天未公布死者之前投票竞选产生。任何身份牌都可以参与警长竞选。所有参与警长竞选的玩家按照预定顺序依次发言后，未参与竞选的玩家依据法官指令统一举票，获得高票的竞选者当选为警长。在警长竞选的过程中竞选者随时可以退选，但退选后没有投票权。做为警长，在白天发言总是最后一个发言，他有归票发言权且他的1票视为2票。警长死亡后，可以将警徽传给场上存活的任一玩家，让其继承警长权力，也可以选择撕掉警徽，则接下来的游戏中没有警长。</p><p>【狼人杀人数身份配置规则建议】<br>7/8人2狼丘比特屠城局<br>1、身份配置•7/8人<br>女巫、预言家、丘比特、狼人<em>2、普通村民</em>2/3<br>2、各阵营胜利条件：<br>人类阵营：杀死所有狼人及坏身份<br>狼人阵营：杀死除狼人以外的所有人（即：屠城）<br>情侣阵营：若两位情侣的身份为同一阵营（双人、双狼），则帮助原本阵营获胜。若两位情侣的身份为对立阵营（即人狼恋），则必须杀死除丘比特以外所有玩家，成为第三阵营单独获胜<br>3、丘比特胜利条件：<br>无论情侣属于何阵营，都帮助情侣所在阵营获胜（人人帮好人，狼狼帮狼人，人狼形成第三方）<br>规则调整: 因人数少且只有两神，如果女巫被首刀允许自救，注意仅限第一晚。第二晚开始女巫被刀不再能自救。 </p><p>9人3狼2神3民丘比特屠城局<br>1、身份配置•9人<br>女巫、预言家、丘比特、狼人<em>3、普通村民</em>3<br>2、各阵营胜利条件：<br>人类阵营：杀死所有狼人及坏身份<br>狼人阵营：杀死除狼人以外的所有人（即：屠城）<br>情侣阵营：若两位情侣的身份为同一阵营（双人、双狼），则帮助原本阵营获胜。若两位情侣的身份为对立阵营（即人狼恋），则必须杀死除丘比特以外所有玩家，成为第三阵营单独获胜<br>3、丘比特胜利条件：<br>（1）若情侣为双人，则丘比特帮助人类阵营获胜<br>（2）若情侣为人狼恋，则丘比特帮助人狼恋获胜，人狼恋情侣与丘比特捆绑获胜，即便情侣已死，丘比特独活至最后依然视为3人共同获胜，同理若丘比特死亡但情侣存活至最后，也为3人共同获胜<br>（3）若情侣为双狼，则丘比特帮助人类阵营获胜<br>规则调整: 因为只有两神，如果女巫被首刀允许自救，注意仅限第一晚。第二晚开始女巫被刀不再能自救。 </p><p>9人标准屠城局<br>1、身份配置•9人<br>猎人、女巫、预言家、狼人<em>3、普通村民</em>3<br>2、各阵营胜利条件：<br>人类阵营：杀死所有狼人及坏身份<br>狼人阵营：杀死除狼人以外的所有人（即：屠城） </p><p>10人333丘比特屠城局<br>1、身份配置•10人<br>猎人、女巫、预言家、丘比特、狼人<em>3、普通村民</em>3<br>2、各阵营胜利条件：<br>人类阵营：杀死所有狼人及坏身份<br>狼人阵营：杀死除狼人以外的所有人（即：屠城）<br>情侣阵营：若两位情侣的身份为同一阵营（双人、双狼），则帮助原本阵营获胜。若两位情侣的身份为对立阵营（即人狼恋），则必须杀死除丘比特以外所有玩家，成为第三阵营单独获胜<br>3、丘比特胜利条件：<br>无论情侣属于何阵营，都帮助情侣所在阵营获胜（人人帮好人，狼狼帮狼人，人狼形成第三方） </p><p>11人四狼丘比特屠城局<br>1、身份配置•11人<br>猎人、女巫、预言家、丘比特、狼人<em>4、普通村民</em>3<br>2、各阵营胜利条件：<br>人类阵营：杀死所有狼人及坏身份<br>狼人阵营：杀死除狼人以外的所有人（即：屠城）<br>情侣阵营：若两位情侣的身份为同一阵营（双人、双狼），则帮助原本阵营获胜。若两位情侣的身份为对立阵营（即人狼恋），则必须杀死除丘比特以外所有玩家，成为第三阵营单独获胜<br>3、丘比特胜利条件：<br>（1）若情侣为双人，则丘比特帮助人类阵营获胜<br>（2）若情侣为人狼恋，则丘比特帮助人狼恋获胜，人狼恋情侣与丘比特捆绑获胜，即便情侣已死，丘比特独活至最后依然视为3人共同获胜，同理若丘比特死亡但情侣存活至最后，也为3人共同获胜<br>（3）若情侣为双狼，则丘比特帮助人类阵营获胜<br>这里要说句题外话，之所以双狼情侣，丘比特帮助人类获胜，是因为现有的人数与身份配置的限制：如果双狼情侣， 丘比特帮助狼人获胜，则狼人第一夜击杀一名玩家后，丘比特与4狼直接绑票可得5票，而人类此时只剩下5名玩家。狼人若拿到警徽则可直接获胜。因此狼情侣就有一种开挂玩法，夜晚砍死一名玩家后，狼情侣之一竞选警长，让狼人与丘比特直接绑票推上警长，然后裸打。 </p><p>444标准屠边局<br>1、身份配置•12人<br>猎人、女巫、预言家、守卫（或白痴或长老）、普通村民<em>4、狼人</em>4<br>2、各阵营胜利条件：<br>人类阵营：杀死所有狼人及坏身份<br>狼人阵营：杀死所有神民或平民（即屠边） </p><p>12人丘比特盗贼局<br>1、身份配置•12人<br>猎人、女巫、预言家、白痴、丘比特、盗贼、普通村民<em>5、狼人</em>3<br>2、各阵营胜利条件：<br>人类阵营：杀死所有狼人及坏身份<br>狼人阵营：杀死所有神民或平民（即屠边）<br>情侣阵营：若两位情侣的身份为同一阵营（双人、双狼），则帮助原本阵营获胜。若两位情侣的身份为对立阵营（即人狼恋），则必须杀死除丘比特以外所有玩家，成为第三阵营单独获胜<br>3、丘比特胜利条件：<br>无论情侣属于何阵营，都帮助情侣所在阵营获胜（人人帮好人，狼狼帮狼人，人狼形成第三方）<br>4、盗贼身份说明：<br>（1）一共14张身份牌，洗混之后抽出两张身份牌。第一天夜晚，盗贼首先睁眼，从2张身份牌中选择1张，从此盗贼即成为该身份，并适用该身份的胜利条件<br>（2）偶尔可能出现没有盗贼的局（即盗贼在抽出的两张底牌中）<br>（3）盗贼牌中不可能出现2狼、盗贼牌中若有狼，必须选择狼人（法官注意，若两张供盗贼选择的牌中有一狼和一其他身份，就直接给盗贼狼身份，另一身份将被埋）<br>5、神民与平民：<br>（1）神民：猎人、女巫、预言家、白痴<br>（2）平民：普通村民*5<br>（3）丘比特既不算神民也不算平民<br>（4）盗贼最终选择的身份决定他是神民还是平民 </p><p>【特别说明】<br>遵守以下规则会让这个游戏变得更加纯粹，富有逻辑、竞技性又不失趣味性:<br>（1）轮到你发言时尽量不要划水，你要尽力的去分析场上的形势，实在一头雾水的也要表明自己的身份。这是个听发言、讲逻辑的游戏，如果每个人都划水“过”就失去了这个游戏的初衷了。<br>（2）不要帖脸发言！帖脸发言就是轮到玩家发言时自己可能真的被冤枉出局了，通过情绪化骂人、脏话的发言来说明自己真的是好身份，或是在发言时通过发毒誓、以场外承诺为担保来自证自己身份的，这些都是不允许的。如果每个好身份都帖脸发毒誓来自证身份，那让狼怎么玩？这终归是个听发言、看行为、讲道理的游戏。<br>（3）玩家发言结束请说个“过”，避免被插话、补话。在轮到某位玩家发言时，其他玩家均不能发言，只能倾听，没有对话，没有反驳，就算在那位玩家发言时说到了之前玩家根本没有说过的话也不能反驳。玩家票型、和跳过的身份也只能自己回忆，其他玩家不能提醒。比如9号玩家发言时说4号玩家投的是6号，且4号跳的是强神，即便4号投的不是6号，也没说过自己是强神4号玩家本身也不能反驳，其他玩家也不能在9号玩家发言时间里提醒和反驳。<br>（4）玩家在发言时遇到规则上的问题时可以请教法官，法官会根据问题做出回答。<br>（5）不要留下场外信息、不要故意制造场外信息、也不要聊场外信息。比如某位狼人在夜里刀人时动静有点大，此时旁边闭眼的你察觉到了，在白天发言的时候你可以针对这位玩家，但是你不能聊这个场外信息。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1、警长规则&lt;br&gt;（1）第一天未宣布死者之前就进行警长竞选。&lt;br&gt;（2）警长竞选后可以退选。&lt;br&gt;（3）只有未竞选者可以投票，竞选后退选不能投票。&lt;br&gt;（4）如果第一次投票时平票，则平票者再进行一次发言，然后其他人视为退选。依然只有未竞选者能投票。如果再次平票则没有
      
    
    </summary>
    
    
      <category term="game" scheme="https://kestre.github.io/blog/tags/game/"/>
    
  </entry>
  
  <entry>
    <title>Android一次申请多个动态权限</title>
    <link href="https://kestre.github.io/blog/2018/07/03/18/07/Android%E7%94%B3%E8%AF%B7%E5%8A%A8%E6%80%81%E6%9D%83%E9%99%90/"/>
    <id>https://kestre.github.io/blog/2018/07/03/18/07/Android申请动态权限/</id>
    <published>2018-07-02T16:00:00.000Z</published>
    <updated>2018-08-18T09:19:47.771Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Android一次申请多个动态权限"><a href="#Android一次申请多个动态权限" class="headerlink" title="Android一次申请多个动态权限"></a>Android一次申请多个动态权限</h1><p>今天做一个短信群发软件，需要申请多个权限，遇到点小问题。</p><h2 id="在-Android6-0（Api-23）以下的版本，申请权限。"><a href="#在-Android6-0（Api-23）以下的版本，申请权限。" class="headerlink" title="在 Android6.0（Api 23）以下的版本，申请权限。"></a>在 Android6.0（Api 23）以下的版本，申请权限。</h2><ul><li>只要在Manifest文件中添加权限：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 读写手机状态和身份权限 及 短信权限</span></span><br><span class="line">&lt;uses-permission android:name=<span class="string">"android.permission.READ_PHONE_STATE"</span> /&gt;</span><br><span class="line">&lt;uses-permission android:name=<span class="string">"android.permission.SEND_SMS"</span> /&gt;</span><br></pre></td></tr></table></figure><h2 id="Android在6-0以后就要使用动态权限了，否则程序可能无法进行某些功能操作。"><a href="#Android在6-0以后就要使用动态权限了，否则程序可能无法进行某些功能操作。" class="headerlink" title="Android在6.0以后就要使用动态权限了，否则程序可能无法进行某些功能操作。"></a>Android在6.0以后就要使用动态权限了，否则程序可能无法进行某些功能操作。</h2><ul><li>Android 6.0对应的Android SDK等级是23.所以一般是先判断手机的版本是否是6.0以上再进行动态请求权限。</li><li>动态申请权限如下:</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (ContextCompat.checkSelfPermission(MainActivity.<span class="keyword">this</span>, Manifest.permission.READ_PHONE_STATE)</span><br><span class="line">        != PackageManager.PERMISSION_GRANTED) &#123;</span><br><span class="line">    ActivityCompat.requestPermissions(MainActivity.<span class="keyword">this</span>, <span class="keyword">new</span> String[]&#123;Manifest.permission.READ_PHONE_STATE&#125;, MY_PERMISSIONS_REQUEST_READ_PHONE_STATE);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// TODU</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>其中MY_PERMISSIONS_REQUEST_READ_PHONE_STATE 是自定义的类常量，可以像下面这样在activity中定义：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="keyword">int</span> MY_PERMISSIONS_REQUEST_READ_PHONE_STATE = <span class="number">1</span>;</span><br></pre></td></tr></table></figure><h2 id="一个请求读写手机状态和身份权限和短信权限的实例"><a href="#一个请求读写手机状态和身份权限和短信权限的实例" class="headerlink" title="一个请求读写手机状态和身份权限和短信权限的实例"></a>一个请求读写手机状态和身份权限和短信权限的实例</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.xiao.sms;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.Manifest;</span><br><span class="line"><span class="keyword">import</span> android.app.ActivityManager;</span><br><span class="line"><span class="keyword">import</span> android.app.PendingIntent;</span><br><span class="line"><span class="keyword">import</span> android.content.DialogInterface;</span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.content.pm.PackageManager;</span><br><span class="line"><span class="keyword">import</span> android.net.Uri;</span><br><span class="line"><span class="keyword">import</span> android.os.Build;</span><br><span class="line"><span class="keyword">import</span> android.provider.Settings;</span><br><span class="line"><span class="keyword">import</span> android.support.annotation.NonNull;</span><br><span class="line"><span class="keyword">import</span> android.support.v4.app.ActivityCompat;</span><br><span class="line"><span class="keyword">import</span> android.support.v4.content.ContextCompat;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AlertDialog;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.telephony.SmsManager;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"><span class="keyword">import</span> android.widget.EditText;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> EditText phoneNum;</span><br><span class="line">    <span class="keyword">private</span> EditText message;</span><br><span class="line">    <span class="keyword">private</span> Button sendSMS;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        phoneNum = (EditText)findViewById(R.id.phone_num);</span><br><span class="line">        message = (EditText)findViewById(R.id.message);</span><br><span class="line">        sendSMS = (Button) findViewById(R.id.send_message);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 这里直接在页面创建的时候请求权限，其实不太好</span></span><br><span class="line">        <span class="comment">// 一般是在触发某个事件的时候再请求动态权限</span></span><br><span class="line">        <span class="comment">// 比如点击按钮跳转到一个打电话页面，如果权限通过就跳转，否者提示说没有权限！</span></span><br><span class="line">        <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= <span class="number">23</span>) &#123;<span class="comment">// 6.0才用动态权限</span></span><br><span class="line">            initPermission();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        sendSMS.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                    String[] everyNumber = phoneNum.getText().toString().split(<span class="string">"，"</span>);</span><br><span class="line">                    String content = message.getText().toString();</span><br><span class="line">                    <span class="keyword">for</span> (String anEveryNumber : everyNumber) &#123;</span><br><span class="line">                        sendMessage(anEveryNumber, content);</span><br><span class="line">                    &#125;</span><br><span class="line">                    Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"发送成功！"</span>, Toast.LENGTH_LONG).show();</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendMessage</span><span class="params">(String phoneNumber,String content)</span></span>&#123;</span><br><span class="line">        SmsManager sms = SmsManager.getDefault();</span><br><span class="line">        ArrayList&lt;String&gt; mSMSMessage = sms.divideMessage(content);</span><br><span class="line">        <span class="keyword">int</span> messageCount = mSMSMessage.size();</span><br><span class="line">        android.telephony.SmsManager smsManager = android.telephony.SmsManager.getDefault();</span><br><span class="line">        Intent itSend = <span class="keyword">new</span> Intent(<span class="string">"demo_sms_send_action"</span>);</span><br><span class="line">        itSend.putExtra(<span class="string">"phone_num"</span>, phoneNumber);</span><br><span class="line">        ArrayList&lt;PendingIntent&gt; sentIntents = <span class="keyword">new</span> ArrayList&lt;PendingIntent&gt;(messageCount);</span><br><span class="line">        smsManager.sendMultipartTextMessage(phoneNumber, <span class="keyword">null</span>, mSMSMessage, sentIntents, <span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 申请两个权限，读写手机状态和身份权限 及 短信权限</span></span><br><span class="line">    <span class="comment">// 首先声明一个数组permissions，将需要的权限都放在里面</span></span><br><span class="line">    String[] permissions = <span class="keyword">new</span> String[]&#123;Manifest.permission.READ_PHONE_STATE,</span><br><span class="line">            Manifest.permission.SEND_SMS&#125;;</span><br><span class="line">    <span class="comment">// 创建一个mPermissionList，逐个判断哪些权限未授予，未授予的权限存储到mPerrrmissionList中</span></span><br><span class="line">    List&lt;String&gt; mPermissionList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> mRequestCode = <span class="number">100</span>;<span class="comment">// 权限请求码</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initPermission</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        mPermissionList.clear();<span class="comment">// 清空没有通过的权限</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 逐个判断你要的权限是否已经通过</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; permissions.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (ContextCompat.checkSelfPermission(<span class="keyword">this</span>, permissions[i]) != PackageManager.PERMISSION_GRANTED) &#123;</span><br><span class="line">                mPermissionList.add(permissions[i]);<span class="comment">// 添加还未授予的权限</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 申请权限</span></span><br><span class="line">        <span class="keyword">if</span> (mPermissionList.size() &gt; <span class="number">0</span>) &#123;<span class="comment">// 有权限没有通过，需要申请</span></span><br><span class="line">            ActivityCompat.requestPermissions(<span class="keyword">this</span>, permissions, mRequestCode);</span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"已授权！"</span>, Toast.LENGTH_LONG).show();</span><br><span class="line">            <span class="comment">// 说明权限都已经通过，可以做你想做的事情去</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 请求权限后回调的方法</span></span><br><span class="line">    <span class="comment">// 参数： requestCode  是我们自己定义的权限请求码</span></span><br><span class="line">    <span class="comment">// 参数： permissions  是我们请求的权限名称数组</span></span><br><span class="line">    <span class="comment">// 参数： grantResults 是我们在弹出页面后是否允许权限的标识数组，</span></span><br><span class="line">    <span class="comment">// 数组的长度对应的是权限名称数组的长度，数组的数据0表示允许权限，-1表示我们点击了禁止权限</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onRequestPermissionsResult</span><span class="params">(<span class="keyword">int</span> requestCode, @NonNull String[] permissions, @NonNull <span class="keyword">int</span>[] grantResults)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onRequestPermissionsResult(requestCode, permissions, grantResults);</span><br><span class="line">        <span class="keyword">boolean</span> hasPermissionDismiss = <span class="keyword">false</span>;<span class="comment">// 有权限没有通过</span></span><br><span class="line">        <span class="keyword">if</span> (mRequestCode == requestCode) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; grantResults.length; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (grantResults[i] == -<span class="number">1</span>) &#123;</span><br><span class="line">                    hasPermissionDismiss = <span class="keyword">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 如果有权限没有被允许</span></span><br><span class="line">            <span class="keyword">if</span> (hasPermissionDismiss) &#123;</span><br><span class="line">                showPermissionDialog();<span class="comment">// 跳转到系统设置权限页面，或者直接关闭页面，不让他继续访问</span></span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">// 全部权限通过，可以进行下一步操作。。。</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 不再提示权限时的展示对话框</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    AlertDialog mPermissionDialog;</span><br><span class="line">    String mPackName = <span class="string">"com.example.xiao.sms"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">showPermissionDialog</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (mPermissionDialog == <span class="keyword">null</span>) &#123;</span><br><span class="line">            mPermissionDialog = <span class="keyword">new</span> AlertDialog.Builder(<span class="keyword">this</span>)</span><br><span class="line">                    .setMessage(<span class="string">"已禁用权限，请手动授予"</span>)</span><br><span class="line">                    .setPositiveButton(<span class="string">"设置"</span>, <span class="keyword">new</span> DialogInterface.OnClickListener() &#123;</span><br><span class="line">                        <span class="meta">@Override</span></span><br><span class="line">                        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(DialogInterface dialog, <span class="keyword">int</span> which)</span> </span>&#123;</span><br><span class="line">                            cancelPermissionDialog();</span><br><span class="line"></span><br><span class="line">                            Uri packageURI = Uri.parse(<span class="string">"package:"</span> + mPackName);</span><br><span class="line">                            Intent intent = <span class="keyword">new</span> Intent(Settings.ACTION_APPLICATION_DETAILS_SETTINGS, packageURI);</span><br><span class="line">                            startActivity(intent);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;)</span><br><span class="line">                    .setNegativeButton(<span class="string">"取消"</span>, <span class="keyword">new</span> DialogInterface.OnClickListener() &#123;</span><br><span class="line">                        <span class="meta">@Override</span></span><br><span class="line">                        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(DialogInterface dialog, <span class="keyword">int</span> which)</span> </span>&#123;</span><br><span class="line">                            <span class="comment">// 关闭页面或者做其他操作</span></span><br><span class="line">                            cancelPermissionDialog();</span><br><span class="line"></span><br><span class="line">                            <span class="comment">// 进程式关闭软件</span></span><br><span class="line">                            android.os.Process.killProcess(android.os.Process.myPid());</span><br><span class="line">                            System.exit(<span class="number">0</span>);</span><br><span class="line">                            ActivityManager manager = (ActivityManager) getSystemService(ACTIVITY_SERVICE);</span><br><span class="line">                            manager.killBackgroundProcesses(getPackageName());</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;)</span><br><span class="line">                    .create();</span><br><span class="line">        &#125;</span><br><span class="line">        mPermissionDialog.show();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 关闭对话框</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">cancelPermissionDialog</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        mPermissionDialog.cancel();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>示例代码根据实际情况做简单修改就可以用在各种动态权限下。<br><strong>说明：</strong>上面的权限数组可以请求多个权限，也可以只请求一个权限</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://blog.csdn.net/wenzhi20102321/article/details/80487975" target="_blank" rel="noopener">Android一次申请多个动态权限</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Android一次申请多个动态权限&quot;&gt;&lt;a href=&quot;#Android一次申请多个动态权限&quot; class=&quot;headerlink&quot; title=&quot;Android一次申请多个动态权限&quot;&gt;&lt;/a&gt;Android一次申请多个动态权限&lt;/h1&gt;&lt;p&gt;今天做一个短信群发软
      
    
    </summary>
    
    
      <category term="note" scheme="https://kestre.github.io/blog/tags/note/"/>
    
      <category term="Android" scheme="https://kestre.github.io/blog/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>android调用拨打电话（包括运行时权限及动态权限）</title>
    <link href="https://kestre.github.io/blog/2018/06/30/18/06/android_Call_Phone/"/>
    <id>https://kestre.github.io/blog/2018/06/30/18/06/android_Call_Phone/</id>
    <published>2018-06-29T16:00:00.000Z</published>
    <updated>2018-08-18T09:17:09.242Z</updated>
    
    <content type="html"><![CDATA[<h2 id="android调用拨打电话"><a href="#android调用拨打电话" class="headerlink" title="android调用拨打电话"></a>android调用拨打电话</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 拨打电话（跳转到拨号界面，用户手动点击拨打）</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> phoneNum 电话号码</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">diallPhone</span><span class="params">(String phoneNum)</span> </span>&#123;</span><br><span class="line">       Intent intent = <span class="keyword">new</span> Intent(Intent.ACTION_DIAL);</span><br><span class="line">       Uri data = Uri.parse(<span class="string">"tel:"</span> + phoneNum);</span><br><span class="line">       intent.setData(data);</span><br><span class="line">       startActivity(intent);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 拨打电话（直接拨打电话）</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> phoneNum 电话号码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">callPhone</span><span class="params">(String phoneNum)</span> </span>&#123;</span><br><span class="line">        Intent intent = <span class="keyword">new</span> Intent(Intent.ACTION_CALL);</span><br><span class="line">        Uri data = Uri.parse(<span class="string">"tel:"</span> + phoneNum);</span><br><span class="line">        intent.setData(data);</span><br><span class="line">        startActivity(intent);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;uses-permission android:name=<span class="string">"android.permission.CALL_PHONE"</span> /&gt;</span><br></pre></td></tr></table></figure><h2 id="自动拨打电话在6-0以后即使加了权限也会crash，因为动态权限的问题-解决如下"><a href="#自动拨打电话在6-0以后即使加了权限也会crash，因为动态权限的问题-解决如下" class="headerlink" title="自动拨打电话在6.0以后即使加了权限也会crash，因为动态权限的问题,解决如下"></a>自动拨打电话在6.0以后即使加了权限也会crash，因为动态权限的问题,解决如下</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> MY_PERMISSIONS_REQUEST_CALL_PHONE = <span class="number">1</span>;</span><br><span class="line"><span class="comment">// 检查是否获得了权限（Android6.0运行时权限）</span></span><br><span class="line"><span class="keyword">if</span> (ContextCompat.checkSelfPermission(MainActivity.<span class="keyword">this</span>, </span><br><span class="line">    Manifest.permission.CALL_PHONE)!= PackageManager.PERMISSION_GRANTED)&#123;</span><br><span class="line">    <span class="comment">// 没有获得授权，申请授权</span></span><br><span class="line">    Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"请授权！"</span>, Toast.LENGTH_LONG).show();</span><br><span class="line">    <span class="keyword">if</span> (ActivityCompat.shouldShowRequestPermissionRationale(MainActivity.<span class="keyword">this</span>,</span><br><span class="line">        Manifest.permission.CALL_PHONE))&#123;</span><br><span class="line">        <span class="comment">// 返回值：</span></span><br><span class="line">        <span class="comment">// 如果app之前请求过该权限,被用户拒绝, 这个方法就会返回true.</span></span><br><span class="line">        <span class="comment">// 如果用户之前拒绝权限的时候勾选了对话框中”Don’t ask again”的选项,那么这个方法会返回false.</span></span><br><span class="line">        <span class="comment">// 如果设备策略禁止应用拥有这条权限, 这个方法也返回false.</span></span><br><span class="line">        <span class="comment">// 弹窗需要解释为何需要该权限，再次请求授权</span></span><br><span class="line">        Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"请授权！"</span>, Toast.LENGTH_LONG).show();</span><br><span class="line">        <span class="comment">// 帮跳转到该应用的设置界面，让用户手动授权</span></span><br><span class="line">        Intent intent = <span class="keyword">new</span> Intent(Settings.ACTION_APPLICATION_DETAILS_SETTINGS);</span><br><span class="line">        Uri uri = Uri.fromParts(<span class="string">"package"</span>, getPackageName(), <span class="keyword">null</span>);</span><br><span class="line">        intent.setData(uri);</span><br><span class="line">        startActivity(intent);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 不需要解释为何需要该权限，直接请求授权</span></span><br><span class="line">        ActivityCompat.requestPermissions(MainActivity.<span class="keyword">this</span>, </span><br><span class="line">            <span class="keyword">new</span> String[]&#123;Manifest.permission.CALL_PHONE&#125;, MY_PERMISSIONS_REQUEST_CALL_PHONE);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    callPhone(String phoneNum);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://blog.csdn.net/bin622/article/details/72453622" target="_blank" rel="noopener">android调用拨打电话（包括运行时权限）</a></li><li><a href="https://blog.csdn.net/lty406910111/article/details/56288529" target="_blank" rel="noopener">解决Android6.0+拨打电话权限问题</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;android调用拨打电话&quot;&gt;&lt;a href=&quot;#android调用拨打电话&quot; class=&quot;headerlink&quot; title=&quot;android调用拨打电话&quot;&gt;&lt;/a&gt;android调用拨打电话&lt;/h2&gt;&lt;figure class=&quot;highlight java
      
    
    </summary>
    
    
      <category term="note" scheme="https://kestre.github.io/blog/tags/note/"/>
    
      <category term="android" scheme="https://kestre.github.io/blog/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>AMTEmu.v0.9.2-painter</title>
    <link href="https://kestre.github.io/blog/2018/06/30/18/06/Adobe%E7%A0%B4%E8%A7%A3/"/>
    <id>https://kestre.github.io/blog/2018/06/30/18/06/Adobe破解/</id>
    <published>2018-06-29T16:00:00.000Z</published>
    <updated>2018-07-29T03:51:02.169Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Adobe-全能软件破解注册机-AMTEmu-v0-9-2-painter"><a href="#Adobe-全能软件破解注册机-AMTEmu-v0-9-2-painter" class="headerlink" title="Adobe 全能软件破解注册机 AMTEmu.v0.9.2-painter"></a>Adobe 全能软件破解注册机 AMTEmu.v0.9.2-painter</h1><p> AMTEmu是一款可用于注册激活PS CS到CC系列的所有产品的注册机。如可以一键破解photoshop cc 2018软件的amtlib.dll文件。</p><ul><li><a href="https://pan.baidu.com/s/1xTCReO-KWfr3BuhO48FbWA" target="_blank" rel="noopener">点击下载</a> AMTEmu.v0.9.2-painter</li><li><a href="https://www.adobe.com/cn/downloads.html?promoid=RL89NGY7&amp;mv=other" target="_blank" rel="noopener">ADOBE下载</a> 并安装<h3 id="成功安装后，打开AMTEmu-v0-9-2-painter（以破解photoshop-cc-2018为例），选择“adobe-photoshop-cc-2017”再点击install，没错，就是选择2017版"><a href="#成功安装后，打开AMTEmu-v0-9-2-painter（以破解photoshop-cc-2018为例），选择“adobe-photoshop-cc-2017”再点击install，没错，就是选择2017版" class="headerlink" title="成功安装后，打开AMTEmu.v0.9.2-painter（以破解photoshop cc 2018为例），选择“adobe photoshop cc 2017”再点击install，没错，就是选择2017版"></a>成功安装后，打开AMTEmu.v0.9.2-painter（以破解photoshop cc 2018为例），选择“adobe photoshop cc 2017”再点击install，没错，就是选择2017版</h3><img src="/img/18/06/Adobe_1.png" alt=""><h3 id="再选择adobe-photoshop-cc-2018软件安装目录下的“amtlib-dll”文件。一般默认安装目录【C-Program-Files-Adobe-Adobe-Photoshop-CC-2018】"><a href="#再选择adobe-photoshop-cc-2018软件安装目录下的“amtlib-dll”文件。一般默认安装目录【C-Program-Files-Adobe-Adobe-Photoshop-CC-2018】" class="headerlink" title="再选择adobe photoshop cc 2018软件安装目录下的“amtlib.dll”文件。一般默认安装目录【C:\Program Files\Adobe\Adobe Photoshop CC 2018】"></a>再选择adobe photoshop cc 2018软件安装目录下的“amtlib.dll”文件。一般默认安装目录【C:\Program Files\Adobe\Adobe Photoshop CC 2018】</h3><img src="/img/18/06/Adobe_2.png" alt=""><h3 id="看到OK提示，破解成功"><a href="#看到OK提示，破解成功" class="headerlink" title="看到OK提示，破解成功"></a>看到OK提示，破解成功</h3><img src="/img/18/06/Adobe_3.png" alt=""></li></ul><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://blog.csdn.net/u010731693/article/details/80647788" target="_blank" rel="noopener">photoshop cc 2018注册机</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Adobe-全能软件破解注册机-AMTEmu-v0-9-2-painter&quot;&gt;&lt;a href=&quot;#Adobe-全能软件破解注册机-AMTEmu-v0-9-2-painter&quot; class=&quot;headerlink&quot; title=&quot;Adobe 全能软件破解注册机 AM
      
    
    </summary>
    
    
      <category term="share" scheme="https://kestre.github.io/blog/tags/share/"/>
    
      <category term="note" scheme="https://kestre.github.io/blog/tags/note/"/>
    
  </entry>
  
  <entry>
    <title>计算机网络和因特网</title>
    <link href="https://kestre.github.io/blog/2018/06/25/18/06/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%92%8C%E8%8B%B1%E7%89%B9%E7%BD%91/"/>
    <id>https://kestre.github.io/blog/2018/06/25/18/06/计算机网络和英特网/</id>
    <published>2018-06-24T16:00:00.000Z</published>
    <updated>2018-07-24T12:06:58.464Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是因特网"><a href="#什么是因特网" class="headerlink" title="什么是因特网"></a>什么是因特网</h1><h2 id="具体构成描述"><a href="#具体构成描述" class="headerlink" title="具体构成描述"></a>具体构成描述</h2><ul><li>因特网是一个世界范围的计算机网络，即它是一个互联了遍及全世界的数以亿计的计算设备的网络。所有这些设备都被称为 <strong>主机</strong>（ host ）或 <strong>端系统</strong>（ end system ）。</li><li>端系统通过 <strong>通信链路</strong>（ communication link ）和 <strong>分组交换机</strong>（ packet switch ）连接到一起。</li><li>当今的因特网中，两种最著名的分组交换机类型是 <strong>路由器</strong>（ router ）和 <strong>链路层交换机</strong>（ link-layer-switch ）。从发送端系统到接受端系统，一个分组所经历的一系列通信链路和分组交换机称为通过该网络的 <strong>路径</strong>（ route 或 path ）。</li><li>端系统通过 <strong>因特网服务提供商</strong>（ Internet Service Providor，<strong>ISP</strong>）接入因特网。</li><li>端系统、分组交换机和其他因特网部件都要运行一系列 <strong>协议</strong>（ protocol ），这些协议控制因特网中信息的接受和发送。<strong>TCP</strong>（ Transmission Control Protocol, <strong>传输控制协议</strong>）和 <strong>IP</strong>（ Internet Protocol，<strong>网际协议</strong>）是因特网中两个重要的协议。因特网的主要协议统称为 <strong>TCP/IP</strong>。</li><li><strong>因特网标准</strong>（ Internet standard ）由 <strong>因特网工程任务组</strong>（ Internet Engineering Task Force，<strong>IETF</strong>）[ <strong>IETF</strong>2012 ] 研发。<strong>IETF</strong>的标准文档称为 <strong>请求评论</strong>（ Request For Comment，<strong>RFC</strong>）。</li></ul><h2 id="服务描述"><a href="#服务描述" class="headerlink" title="服务描述"></a>服务描述</h2><ul><li><strong>分布式应用程序</strong>（ distributed application )，设计多台相互交换数据的端系统。</li><li>与因特网相连的端系统提供了一个 <strong>应用程序编程接口</strong>（ Application Programming Interface，<strong>API</strong>），该API规定了运行在一个端系统上的软件请求因特网基础设施向运行在另一个端系统上的特定目的地软件交付数据的方式。</li></ul><h2 id="什么是协议"><a href="#什么是协议" class="headerlink" title="什么是协议"></a>什么是协议</h2><ul><li>计算机网络中进行数据交换而建立的规则、标准或约定的集合。</li><li>网络协议类似于人类协议，除了交换报文和采动作的实体是某些设备的硬件或软件组成（ 这些设备可以是计算机、智能手机、平板电脑、路由器或其他具有网络能力的设备）。</li></ul><h1 id="网络边缘"><a href="#网络边缘" class="headerlink" title="网络边缘"></a>网络边缘</h1><h2 id="接入网"><a href="#接入网" class="headerlink" title="接入网"></a>接入网</h2><ul><li><strong>接入网</strong>（ access network ）指将端系统连接到其 <strong>边缘路由器</strong>（ edge router ）的物理链路。<br>家庭接入：DSL、电缆、FTTH、拨号和卫星<br>企业（ 和家庭 ）接入：以太网和 WIFI<br>广域无线接入：3G和LTE</li><li><strong>物理媒介</strong>划分为两类：<strong>导引型媒体</strong>（ guided media ）和 <strong>非导引型媒体</strong>（ unguided meida ）。<br>双绞铜线，同轴电缆，光纤，陆地无线电信道，卫星无线电信道</li></ul><h2 id="网络核心"><a href="#网络核心" class="headerlink" title="网络核心"></a>网络核心</h2><ul><li>分组交换<br><strong>储存转发传输</strong>（ store-and-forward transmission ），排队时延和分组丢失，转发表和路由选择协议</li><li>电路交换<br>链路中的电路是通过 <strong>频分复用</strong>（ Frequency-Division Multiplexing，FDM ）或 <strong>时分复用</strong>（ Time-Division Multiplexing，TDM ）来实现的。</li><li>网络中的网络</li></ul><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li>计算机网络——自项向下方法</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;什么是因特网&quot;&gt;&lt;a href=&quot;#什么是因特网&quot; class=&quot;headerlink&quot; title=&quot;什么是因特网&quot;&gt;&lt;/a&gt;什么是因特网&lt;/h1&gt;&lt;h2 id=&quot;具体构成描述&quot;&gt;&lt;a href=&quot;#具体构成描述&quot; class=&quot;headerlink&quot; titl
      
    
    </summary>
    
    
      <category term="note" scheme="https://kestre.github.io/blog/tags/note/"/>
    
      <category term="计算机网络" scheme="https://kestre.github.io/blog/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>Github安装及配置</title>
    <link href="https://kestre.github.io/blog/2018/06/03/18/06/github%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AE/"/>
    <id>https://kestre.github.io/blog/2018/06/03/18/06/github安装及配置/</id>
    <published>2018-06-02T16:00:00.000Z</published>
    <updated>2018-08-05T14:27:32.935Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是Github"><a href="#什么是Github" class="headerlink" title="什么是Github"></a>什么是Github</h1><ul><li><p>github是一个基于git的代码托管平台，付费用户可以建私人仓库，我们一般的免费用户只能使用公共仓库，也就是代码要公开。</p></li><li><p><a href="https://github.com/join?source=header-home" target="_blank" rel="noopener">注册</a>Github账户 (已有账号可以跳过此步骤)</p></li></ul><h2 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h2><ul><li><a href="https://git-scm.com/downloads/" target="_blank" rel="noopener">下载</a>并安装git</li></ul><h2 id="配置ssh"><a href="#配置ssh" class="headerlink" title="配置ssh"></a>配置ssh</h2><ul><li>右键git bash</li><li><p>设置user.name和user.email</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">"你的GitHub用户名"</span></span><br><span class="line">git config --global user.email <span class="string">"你的GitHub注册邮箱"</span></span><br></pre></td></tr></table></figure></li><li><p>在本地生成ssh密匙</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"你的GitHub注册邮箱"</span></span><br></pre></td></tr></table></figure></li><li><p>之后会要求确认路径和输入密码，我们这使用默认的一路回车就行。成功的话会在~/下生成.ssh文件夹，进去，打开id_rsa.pub，复制里面的key</p></li><li><p>回到github上，进入 Account Settings（账户配置），左边选择SSH Keys，Add SSH Key,title随便填，粘贴在你电脑上生成的key。<br><img src="/img/18/06/github安装及配置.png" alt=""><br>为了验证是否成功，在git bash下输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -T git@github.com</span><br></pre></td></tr></table></figure></li><li><p>如果是第一次的会提示是否continue，输入yes就会看到：You’ve successfully authenticated, but GitHub does not provide shell access 。这就表示已成功连上github。</p></li></ul><h2 id="还是不懂？那看看别人家的"><a href="#还是不懂？那看看别人家的" class="headerlink" title="还是不懂？那看看别人家的"></a>还是不懂？那看看别人家的</h2><ul><li><a href="https://blog.csdn.net/javaandroid730/article/details/53522872" target="_blank" rel="noopener">入门级：GitHub和Git超超超详细使用教程！</a></li><li><a href="https://blog.csdn.net/qq_35246620/article/details/69061355" target="_blank" rel="noopener">利用 SSH 完成 Git 与 GitHub 的绑定</a></li><li>还是不懂？还有<a href="https://www.baidu.com/" target="_blank" rel="noopener">绝招</a>!</li></ul><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://blog.csdn.net/javaandroid730/article/details/53522872" target="_blank" rel="noopener">CSDN</a></li><li><a href="http://www.runoob.com/w3cnote/git-guide.html" target="_blank" rel="noopener">菜鸟教程</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;什么是Github&quot;&gt;&lt;a href=&quot;#什么是Github&quot; class=&quot;headerlink&quot; title=&quot;什么是Github&quot;&gt;&lt;/a&gt;什么是Github&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;github是一个基于git的代码托管平台，付费用户可以建私人仓库
      
    
    </summary>
    
    
      <category term="note" scheme="https://kestre.github.io/blog/tags/note/"/>
    
      <category term="github" scheme="https://kestre.github.io/blog/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript中的正则表达式</title>
    <link href="https://kestre.github.io/blog/2018/06/03/18/06/RegExp/"/>
    <id>https://kestre.github.io/blog/2018/06/03/18/06/RegExp/</id>
    <published>2018-06-02T16:00:00.000Z</published>
    <updated>2018-07-24T12:07:04.586Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-正则表达式的定义"><a href="#1-正则表达式的定义" class="headerlink" title="1.正则表达式的定义"></a>1.正则表达式的定义</h1><h2 id="JavaScript中的正则表达式用RegExp对象表示"><a href="#JavaScript中的正则表达式用RegExp对象表示" class="headerlink" title="JavaScript中的正则表达式用RegExp对象表示"></a>JavaScript中的正则表达式用RegExp对象表示</h2><ul><li>可以使用RegExp()构造函数来创建对象。以下代码定义了名为pattern的RegExp对象，其模式为”s”</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> pattern = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"s"</span>);</span><br><span class="line"><span class="keyword">var</span> pattern = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"s"</span>,<span class="string">"i"</span>);</span><br></pre></td></tr></table></figure><ul><li>通过一种特殊的直接量语法创建（更多的使用）</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> pattern = <span class="regexp">/s/</span>;</span><br><span class="line"><span class="keyword">var</span> pattern = <span class="regexp">/s/i</span>;</span><br></pre></td></tr></table></figure><h2 id="直接量字符"><a href="#直接量字符" class="headerlink" title="直接量字符"></a>直接量字符</h2><ul><li>正则表达式语法也支持非字母的字符匹配，这些字符需要通过反斜杠（ \ ）作为前缀进行转义。</li></ul><table><thead><tr><th style="text-align:left">字符</th><th style="text-align:left">匹配</th></tr></thead><tbody><tr><td style="text-align:left">字母和数字字符</td><td style="text-align:left">自身</td></tr><tr><td style="text-align:left">\o</td><td style="text-align:left">NUL字符（\u0000）</td></tr><tr><td style="text-align:left">\t</td><td style="text-align:left">制表符（\u0009）</td></tr><tr><td style="text-align:left">\n</td><td style="text-align:left">换行符（\u000A）</td></tr><tr><td style="text-align:left">\v</td><td style="text-align:left">垂直制表符（\u000B）</td></tr><tr><td style="text-align:left">\f</td><td style="text-align:left">换页符（\u000C）</td></tr><tr><td style="text-align:left">\r</td><td style="text-align:left">回车符（\u000D）</td></tr><tr><td style="text-align:left">\xnn</td><td style="text-align:left">由十六进制数nn指定的拉丁字符，例如，\x0A等价于\n</td></tr><tr><td style="text-align:left">\uxxxx</td><td style="text-align:left">由十六进制数xxxx指定的Unicode字符，例如，\u0009等价于\t</td></tr><tr><td style="text-align:left">\cX</td><td style="text-align:left">控制字符^X，例如，\cJ等价于换行符\n</td></tr></tbody></table><h2 id="字符类"><a href="#字符类" class="headerlink" title="字符类"></a>字符类</h2><ul><li>将直接量字符单独放进方括号内就组成了字符类，一个字符类可以匹配它所包括的任意字符。</li></ul><table><thead><tr><th style="text-align:left">字符</th><th style="text-align:left">匹配</th></tr></thead><tbody><tr><td style="text-align:left">[…]</td><td style="text-align:left">方括号内的任意字符</td></tr><tr><td style="text-align:left">[^…]</td><td style="text-align:left">不在方括号内的任意字符</td></tr><tr><td style="text-align:left">.</td><td style="text-align:left">除换行符和其他Unicode行终止符之外的任意字符</td></tr><tr><td style="text-align:left">\w</td><td style="text-align:left">任何ASCII字符组成的单词，等价于[a-zA-Z0-9]</td></tr><tr><td style="text-align:left">\W</td><td style="text-align:left">任何不是ASCII字符组成的单词，等价于[^a-zA-Z0-9]</td></tr><tr><td style="text-align:left">\s</td><td style="text-align:left">任何Unicode空白符</td></tr><tr><td style="text-align:left">\S</td><td style="text-align:left">任何非Unicode空白符的字符，注意\w和\S不同</td></tr><tr><td style="text-align:left">\d</td><td style="text-align:left">任何ASCII数字，等价于[0-9]</td></tr><tr><td style="text-align:left">\D</td><td style="text-align:left">除了ASCII数字之外的任何字符，等价于[^0-9]</td></tr><tr><td style="text-align:left">[\b]</td><td style="text-align:left">退格直接量（特例）</td></tr></tbody></table><ul><li>注意：在反括号之内也可以写特殊转义字符。</li></ul><h2 id="重复"><a href="#重复" class="headerlink" title="重复"></a>重复</h2><ul><li>除了用 /\d\d/ , /\d\d\d\d/ 表示两位数和四位数，可以用 重复字符语法。</li></ul><table><thead><tr><th style="text-align:left">字符</th><th style="text-align:left">匹配</th></tr></thead><tbody><tr><td style="text-align:left">{n,m}</td><td style="text-align:left">匹配前一项至少n次，但不能超过m次</td></tr><tr><td style="text-align:left">{n,}</td><td style="text-align:left">匹配前一项n次或者更多次</td></tr><tr><td style="text-align:left">{n}</td><td style="text-align:left">匹配前一项n次</td></tr><tr><td style="text-align:left">?</td><td style="text-align:left">匹配前一项0次或者1次，也就是说前一项是可选的，等价于{0,1}</td></tr><tr><td style="text-align:left">+</td><td style="text-align:left">匹配前一项1次或多次，等价于{1，}</td></tr><tr><td style="text-align:left">*</td><td style="text-align:left">匹配前一项0次或多次，等价于{0，}</td></tr></tbody></table><h2 id="非贪婪的重复"><a href="#非贪婪的重复" class="headerlink" title="非贪婪的重复"></a>非贪婪的重复</h2><h3 id="贪婪"><a href="#贪婪" class="headerlink" title="贪婪"></a>贪婪</h3><ul><li>在上面列出的匹配重复字符是尽可能的多匹配，而且允许后续的正则表达式继续匹配。因此，我们称之为”贪婪的“匹配。<br>例如：</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"aaa"</span>.match(<span class="regexp">/a+/</span>)</span><br><span class="line"><span class="comment">// ["aaa", index: 0, input: "aaa"]</span></span><br><span class="line"><span class="comment">//a+为一到多个a匹配</span></span><br></pre></td></tr></table></figure><h3 id="非贪婪"><a href="#非贪婪" class="headerlink" title="非贪婪"></a>非贪婪</h3><ul><li>我们同样可以使用正则表达式进行非贪婪匹配。只须在待匹配的字符后跟随一个问号即可：“??” 、“+?” 、“*?” 或 “{1,5}”。<br>例如：</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"aaa"</span>.match(<span class="regexp">/a+?/</span>)</span><br><span class="line"><span class="comment">// ["a", index: 0, input: "aaa"]  </span></span><br><span class="line"><span class="comment">//加上?号后为非贪婪模式, 即匹配完成即返回, 不继续</span></span><br></pre></td></tr></table></figure><p><strong>注意：</strong>正则是从左到右开始匹配所有项, 直到匹配为止。那么如下, 它匹配的就应该是整段字符, 而不是单独的一个b<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"aaab"</span>.match(<span class="regexp">/a*?b/</span>)</span><br><span class="line"><span class="comment">// ["aaab", index: 0, input: "aaab"]</span></span><br></pre></td></tr></table></figure></p><h2 id="选择、分组和引用"><a href="#选择、分组和引用" class="headerlink" title="选择、分组和引用"></a>选择、分组和引用</h2><h3 id="选择"><a href="#选择" class="headerlink" title="选择"></a>选择</h3><ul><li>选择项的尝试匹配次序从左到右，知道发现了匹配项。如果左边的选择项匹配，就忽略右边的匹配项，即使他会产生更好的匹配。</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"ab"</span>.match(<span class="regexp">/a|ab/</span>)</span><br><span class="line"><span class="comment">// ["a", index: 0, input: "ab"]</span></span><br><span class="line"><span class="comment">//它只匹配第一个字符</span></span><br></pre></td></tr></table></figure><h3 id="分组"><a href="#分组" class="headerlink" title="分组"></a>分组</h3><ul><li>使用（）把单独的项组合成子表达式，以便可以像处理一个独立的单元那样用 “ | ” 、“ * ” 、“ + ” 、“ ？” 等来对单元内的项进行处理。</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"abcdef"</span>.match(<span class="regexp">/(ab|cd)+|ef/</span>)  </span><br><span class="line"><span class="comment">// ["abcd", "cd", index: 0, input: "abcdef"]</span></span><br></pre></td></tr></table></figure><ul><li>在正则表达式中，圆括号的另一个作用是在完整的模式中定义子模式</li></ul><p><strong>注意：</strong>当一个正则表达式成功地和目标字符串相匹配时，可以从目标串中抽出和圆括号中的子模式相匹配的部分。例如：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"aaa111"</span>.match(<span class="regexp">/[a-z]*\d/</span>)</span><br><span class="line"><span class="comment">// ["aaa1", index: 0, input: "aaa111"] </span></span><br><span class="line"><span class="string">"aaa111"</span>.match(<span class="regexp">/[a-z]*(\d)/</span>)</span><br><span class="line"><span class="comment">// ["aaa1", "1", index: 0, input: "aaa111"]</span></span><br></pre></td></tr></table></figure></p><h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><ul><li>使用带圆括号的表达式允许在同一正则表达式的后部分引用前面的子表达式。通过在字符“\”后面加一位或多位数字来实现。</li></ul><p><strong>注意：</strong>数字指定了带圆括号的子表达式在正则表达式中的位置，是参与计数的左括号的位置。<br><strong>注意：</strong>引用指的并不是模式的引用，而是指的是与那个模式相匹配的完全相同的字符。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"a'aa1'11"</span>.match(<span class="regexp">/(['"])[^'"]*\1/</span>)</span><br><span class="line"><span class="comment">// ["'aa1'", "'", index: 0, input: "a'aa1'11"]</span></span><br></pre></td></tr></table></figure></p><ul><li>在正则表达式中可以使用（？：）创建不带数字编码的引用。</li></ul><table><thead><tr><th style="text-align:left">字符</th><th style="text-align:left">含义</th></tr></thead><tbody><tr><td style="text-align:left">&#124;</td><td style="text-align:left">选择，匹配的是该符号左边的子表达式或右边的子表达式</td></tr><tr><td style="text-align:left">(…)</td><td style="text-align:left">组合，将几个项组合为一个单元，这个单元可通过 ”*“ 、”+“ 、”？“ 和 ”&#124;“ 等符号加以修饰，而且可以记住和这个组合相匹配的字符串以供此后的引用使用</td></tr><tr><td style="text-align:left">(?…)</td><td style="text-align:left">只组合，把项组合到一个单元，但不记忆与该组相匹配的字符</td></tr><tr><td style="text-align:left">\n</td><td style="text-align:left">和第n个分组第一次匹配的字符相匹配，组是圆括号中的子表达式（也有可能是嵌套的），组索引是从左到右的左括号数，”(?:“ 形式的分组不编码</td></tr></tbody></table><h2 id="指定匹配位置"><a href="#指定匹配位置" class="headerlink" title="指定匹配位置"></a>指定匹配位置</h2><ul><li>正则表达式中的锚字符</li></ul><table><thead><tr><th style="text-align:left">字符</th><th style="text-align:left">含义</th></tr></thead><tbody><tr><td style="text-align:left">^&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td style="text-align:left">匹配字符串的开头，在多行检索中，匹配一行的开头</td></tr><tr><td style="text-align:left">$</td><td style="text-align:left">匹配字符串的结尾，在多行结尾中，匹配一行的结尾</td></tr><tr><td style="text-align:left">\b</td><td style="text-align:left">匹配一个单词的边界，简言之，就是位于字符\w和\W之间的位置，或位于字符\w和字符串的开头或者结尾之间的位置（但需要注意，[\b]匹配的是退格符）</td></tr><tr><td style="text-align:left">\B</td><td style="text-align:left">匹配非单词边界的位置</td></tr><tr><td style="text-align:left">(?=p)</td><td style="text-align:left">零宽正向先行断言，要求接下来的字符都与p匹配，但不能包括匹配p的那些字符</td></tr><tr><td style="text-align:left">(?!p)</td><td style="text-align:left">零宽负向先行断言，要求接下来的字符不与p匹配</td></tr></tbody></table><h2 id="修饰符"><a href="#修饰符" class="headerlink" title="修饰符"></a>修饰符</h2><ul><li>用以说明高级匹配模式的规则。</li></ul><p><strong>注意：</strong>修饰符放在 ” / “ 符号之外的，也就是说，它们不是出现在两条斜线之间，而是第二条斜线之后。</p><table><thead><tr><th style="text-align:left">字符</th><th style="text-align:left">含义</th></tr></thead><tbody><tr><td style="text-align:left">i</td><td style="text-align:left">执行不区分大小写的匹配</td></tr><tr><td style="text-align:left">g</td><td style="text-align:left">执行一个全局匹配，简言之，即找到所有的匹配，而不是在找到第一个之后就停止</td></tr><tr><td style="text-align:left">m</td><td style="text-align:left">多行匹配模式，^匹配一行的开头和字符串的开头，$匹配行的结束和字符串的结束</td></tr></tbody></table><h1 id="2-用于模式匹配的String方法"><a href="#2-用于模式匹配的String方法" class="headerlink" title="2.用于模式匹配的String方法"></a>2.用于模式匹配的String方法</h1><ul><li>讨论String对象的一些用以执行正则表达式模式匹配和检索替换操作的方法</li></ul><h2 id="search"><a href="#search" class="headerlink" title="search()"></a>search()</h2><ul><li>它的参数是一个正则表达式，返回第一个与之匹配的字串的起始位置</li></ul><p><strong>注意：</strong>如果找不到匹配的子串，它将返回-1。<br><strong>注意：</strong>search()方法不支持全局检索，因此它忽略正则表达式参数中的修饰符g</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stringObject.search(regexp/substr)</span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:left">参数</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">regexp/substr</td><td style="text-align:left">必需。</td></tr></tbody></table><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"JavaScript"</span>.search(<span class="regexp">/script/i</span>);</span><br><span class="line"><span class="comment">// 返回值为 4</span></span><br></pre></td></tr></table></figure><h2 id="replace"><a href="#replace" class="headerlink" title="replace()"></a>replace()</h2><ul><li>用于在字符串中用一些字符替换另一些字符，或替换一个与正则表达式匹配的子串。</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stringObject.replace(regexp/substr,replacement)</span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:left">参数</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">regexp/substr</td><td style="text-align:left">必需。规定子字符串或要替换的模式的 RegExp 对象。请注意，如果该值是一个字符串，则将它作为要检索的直接量文本模式，而不是首先被转换为 RegExp 对象</td></tr><tr><td style="text-align:left">replacement</td><td style="text-align:left">必需。一个字符串值。规定了替换文本或生成替换文本的函数。</td></tr></tbody></table><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"JavaScript"</span>.replace(<span class="regexp">/script/i</span>, <span class="string">"SCRIPT"</span>);</span><br><span class="line"><span class="comment">// 返回值为 JavaSCRIPT</span></span><br></pre></td></tr></table></figure><h2 id="match"><a href="#match" class="headerlink" title="match()"></a>match()</h2><ul><li>match() 方法可在字符串内检索指定的值，或找到一个或多个正则表达式的匹配。</li></ul><p><strong>注意：</strong>该方法类似 indexOf() 和 lastIndexOf()，但是它返回指定的值，而不是字符串的位置。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">stringObject.match(searchvalue)</span><br><span class="line">stringObject.match(regexp)</span><br></pre></td></tr></table></figure></p><table><thead><tr><th style="text-align:left">参数</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">searchvalue</td><td style="text-align:left">必需。规定要检索的字符串值。</td></tr><tr><td style="text-align:left">regexp</td><td style="text-align:left">必需。规定要匹配的模式的 RegExp 对象。如果该参数不是 RegExp 对象，则需要首先把它传递给 RegExp 构造函数，将其转换为 RegExp 对象。</td></tr></tbody></table><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"1 plus 2 equal 3"</span>.match(<span class="regexp">/\d+/g</span>);</span><br><span class="line"><span class="comment">// 返回值为 ["1", "2", "3"] 的数组</span></span><br></pre></td></tr></table></figure><h2 id="exec"><a href="#exec" class="headerlink" title="exec()"></a>exec()</h2><ul><li>用于检索字符串中的正则表达式的匹配。</li></ul><p><strong>注意：</strong>返回一个数组，其中存放匹配的结果。如果未找到匹配，则返回值为 null。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RegExpObject.exec(string)</span><br></pre></td></tr></table></figure></p><table><thead><tr><th style="text-align:left">参数</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">string</td><td style="text-align:left">必需。要检索的字符串。</td></tr></tbody></table><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/\d+<span class="regexp">/g.exec("1 plus 2 equal 3");</span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/ 返回值为数组,属性 index：0 ，input: "1 plus 2 equal 3"</span></span><br></pre></td></tr></table></figure><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li>JavaScript权威指南（第六版）</li><li><a href="http://www.w3school.com.cn/jsref/jsref_replace.asp" target="_blank" rel="noopener">w3school</a></li><li><a href="http://lullabyus.iteye.com/blog/1442347" target="_blank" rel="noopener">贪婪模式详解</a></li><li><a href="https://blog.csdn.net/qq_34356563/article/details/77844689" target="_blank" rel="noopener">js正则表达式的选择、分组、引用</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-正则表达式的定义&quot;&gt;&lt;a href=&quot;#1-正则表达式的定义&quot; class=&quot;headerlink&quot; title=&quot;1.正则表达式的定义&quot;&gt;&lt;/a&gt;1.正则表达式的定义&lt;/h1&gt;&lt;h2 id=&quot;JavaScript中的正则表达式用RegExp对象表示&quot;&gt;&lt;a 
      
    
    </summary>
    
    
      <category term="note" scheme="https://kestre.github.io/blog/tags/note/"/>
    
      <category term="JavaScript" scheme="https://kestre.github.io/blog/tags/JavaScript/"/>
    
      <category term="RegExp" scheme="https://kestre.github.io/blog/tags/RegExp/"/>
    
  </entry>
  
  <entry>
    <title>书签</title>
    <link href="https://kestre.github.io/blog/2018/06/02/18/06/favorite/"/>
    <id>https://kestre.github.io/blog/2018/06/02/18/06/favorite/</id>
    <published>2018-06-01T16:00:00.000Z</published>
    <updated>2019-01-16T03:08:54.326Z</updated>
    
    <content type="html"><![CDATA[<h2 id="music"><a href="#music" class="headerlink" title="music"></a>music</h2><table><thead><tr><th style="text-align:left">网站</th><th style="text-align:left">域名</th></tr></thead><tbody><tr><td style="text-align:left">尤克里里小站</td><td style="text-align:left"><a href="http://www.tanukulele.com/" target="_blank" rel="noopener">http://www.tanukulele.com/</a></td></tr><tr><td style="text-align:left">尤克里里中国网</td><td style="text-align:left"><a href="http://www.ukulelecn.com/portal.php" target="_blank" rel="noopener">http://www.ukulelecn.com/portal.php</a></td></tr><tr><td style="text-align:left">虫虫吉他</td><td style="text-align:left"><a href="http://www.ccguitar.cn/" target="_blank" rel="noopener">http://www.ccguitar.cn/</a></td></tr><tr><td style="text-align:left">吉他社</td><td style="text-align:left"><a href="https://www.jitashe.org/" target="_blank" rel="noopener">https://www.jitashe.org/</a></td></tr><tr><td style="text-align:left">17吉他</td><td style="text-align:left"><a href="http://www.17jita.com/" target="_blank" rel="noopener">http://www.17jita.com/</a></td></tr></tbody></table><h2 id="video"><a href="#video" class="headerlink" title="video"></a>video</h2><table><thead><tr><th style="text-align:left">网站</th><th style="text-align:left">域名</th></tr></thead><tbody><tr><td style="text-align:left">80s电影网</td><td style="text-align:left"><a href="http://www.80s.tw" target="_blank" rel="noopener">www.80s.tw</a></td></tr><tr><td style="text-align:left">哈哩哈哩</td><td style="text-align:left"><a href="http://www.halihali.cc" target="_blank" rel="noopener">www.halihali.cc</a></td></tr><tr><td style="text-align:left">片源网</td><td style="text-align:left"><a href="http://www.pianyuan.net" target="_blank" rel="noopener">www.pianyuan.net</a></td></tr></tbody></table><h2 id="resource"><a href="#resource" class="headerlink" title="resource"></a>resource</h2><table><thead><tr><th style="text-align:left">网站</th><th style="text-align:left">域名</th></tr></thead><tbody><tr><td style="text-align:left">优品PPT模板</td><td style="text-align:left"><a href="http://www.ypppt.com" target="_blank" rel="noopener">www.ypppt.com</a></td></tr><tr><td style="text-align:left">阿里图标库</td><td style="text-align:left"><a href="http://www.iconfont.cn" target="_blank" rel="noopener">www.iconfont.cn</a></td></tr><tr><td style="text-align:left">MSDN</td><td style="text-align:left">msdn.itellyou.cn</td></tr><tr><td style="text-align:left">syberiaos</td><td style="text-align:left">syberiaos.com</td></tr><tr><td style="text-align:left">zd423软件分享平台</td><td style="text-align:left"><a href="http://www.zdfans.com/" target="_blank" rel="noopener">http://www.zdfans.com/</a></td></tr></tbody></table><h2 id="studio"><a href="#studio" class="headerlink" title="studio"></a>studio</h2><table><thead><tr><th style="text-align:left">网站</th><th style="text-align:left">域名</th></tr></thead><tbody><tr><td style="text-align:left">Hexo</td><td style="text-align:left"><a href="https://hexo.io" target="_blank" rel="noopener">https://hexo.io</a></td></tr><tr><td style="text-align:left">Vue.js</td><td style="text-align:left"><a href="https://cn.vuejs.org" target="_blank" rel="noopener">https://cn.vuejs.org</a></td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;music&quot;&gt;&lt;a href=&quot;#music&quot; class=&quot;headerlink&quot; title=&quot;music&quot;&gt;&lt;/a&gt;music&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:left&quot;&gt;网站&lt;/th&gt;
&lt;th 
      
    
    </summary>
    
    
      <category term="note" scheme="https://kestre.github.io/blog/tags/note/"/>
    
  </entry>
  
</feed>
